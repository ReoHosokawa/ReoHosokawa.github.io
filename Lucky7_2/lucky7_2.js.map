{"version":3,"sources":["webpack://lucky7_2/./src/app.ts","webpack://lucky7_2/./src/constant.ts","webpack://lucky7_2/./src/lucky7.ts","webpack://lucky7_2/webpack/bootstrap","webpack://lucky7_2/webpack/runtime/make namespace object","webpack://lucky7_2/webpack/startup"],"names":["lucky7_1","window","onload","lucky7","Lucky7","addEvent","init","Object","defineProperty","exports","value","Constant","get","0","1","2","3","enumerable","configurable","__awaiter","this","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","Symbol","iterator","n","v","op","TypeError","call","pop","length","push","constant_1","_this","btnStart","addEventListener","disabled","btnReset","checked","imgCoin","style","visibility","pointBalloon","classList","remove","add","setSpinFontColorGold","spin1","spin2","spin3","addDuringSpinClass","btnStops","spinInterval1","setInterval","setRandomNumber","spinInterval2","spinInterval3","forEach","target","targetId","numberOfSeven","addPoint","currentRemainingCount","i","_a","id","stopSpin","removeDuringSpinClass","countNumberOfSeven","POINT_LIST","Number","remainingCount","textContent","toString","ALL_SEVEN_COUNT","setSpinFontColorRed","MAX_BLINKS_NUMBER","sleep","toggleCoinImageOnOff","scoreCountUp","turnEndProcess","confirm","RESET_CONFIRM_MESSAGE","messageArea","DEFALT_MESSAGE","SPIN_MAX_COUNT","score","lblStart","GAME_END_CLASS_NAME","_i","ms","setTimeout","STOP_BUTTON_ID_LIST","stopInterval","spins","arguments","spins_1","spin","color","spins_2","reduce","acc","targets","random","Math","floor","innerText","spinInterval","clearInterval","isVisible","document","getElementById","querySelectorAll","prototype","startTime","Date","now","from","to","timer","progress","DURATION","__webpack_module_cache__","__webpack_require__","moduleId","module","__webpack_modules__","r","toStringTag"],"mappings":"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","file":"lucky7_2.js","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nrequire(\"./scss/index.scss\");\r\nrequire(\"./scss/buttons.scss\");\r\nvar lucky7_1 = require(\"./lucky7\");\r\n/**\r\n * ページ読み込み完了時に呼び出される関数\r\n */\r\nvar appInit = function () {\r\n    // Lucky7 インスタンスの生成\r\n    var lucky7 = new lucky7_1.Lucky7();\r\n    // イベントリスナーの登録\r\n    lucky7.addEvent();\r\n    // ゲーム初期化\r\n    lucky7.init();\r\n};\r\n// ページ読み込み完了時に実行する処理を定義する\r\nwindow.onload = appInit;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Constant = void 0;\r\n/**\r\n * 定数クラス\r\n */\r\nvar Constant = /** @class */ (function () {\r\n    function Constant() {\r\n    }\r\n    Object.defineProperty(Constant, \"POINT_LIST\", {\r\n        /**\r\n         * 7 の数に応じて加算されるポイントの一覧\r\n         */\r\n        get: function () {\r\n            return {\r\n                0: 0,\r\n                1: 5,\r\n                2: 20,\r\n                3: 100\r\n            };\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constant, \"STOP_BUTTON_ID_LIST\", {\r\n        /**\r\n         * スピン停止ボタンの ID 一覧\r\n         */\r\n        get: function () {\r\n            return {\r\n                1: 'btnStop1',\r\n                2: 'btnStop2',\r\n                3: 'btnStop3',\r\n            };\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constant, \"ALL_SEVEN_COUNT\", {\r\n        /**\r\n         * 7 の最大カウント数\r\n         */\r\n        get: function () {\r\n            return 3;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constant, \"SPIN_MAX_COUNT\", {\r\n        /**\r\n         * スピン実行最大回数\r\n         */\r\n        get: function () {\r\n            return 20;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    ;\r\n    Object.defineProperty(Constant, \"MAX_BLINKS_NUMBER\", {\r\n        /**\r\n         * 最大点滅回数\r\n         */\r\n        get: function () {\r\n            return 6;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constant, \"DURATION\", {\r\n        /**\r\n         * カウントアップの間隔\r\n         */\r\n        get: function () {\r\n            return 360;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constant, \"DEFALT_MESSAGE\", {\r\n        /**\r\n         * メッセージエリアにデフォルトで出す文字列\r\n         */\r\n        get: function () {\r\n            return 'スピンして 7 が出たらポイントゲット！';\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constant, \"GAME_END_CLASS_NAME\", {\r\n        /**\r\n         * ゲーム終了を示すクラス名\r\n         */\r\n        get: function () {\r\n            return \"gameEnd\";\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constant, \"RESET_CONFIRM_MESSAGE\", {\r\n        /**\r\n         * リセット確認メッセージ\r\n         */\r\n        get: function () {\r\n            return \"まだ途中ですが、リセットしてもよろしいですか？\";\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return Constant;\r\n}());\r\nexports.Constant = Constant;\r\n","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Lucky7 = void 0;\r\nvar constant_1 = require(\"./constant\");\r\n/**\r\n * Lucky7 クラス\r\n */\r\nvar Lucky7 = /** @class */ (function () {\r\n    // -------------------------------------\r\n    // 構築・消滅\r\n    // -------------------------------------\r\n    function Lucky7() {\r\n        var _this = this;\r\n        // -------------------------------------\r\n        // パブリックメソッド\r\n        // -------------------------------------\r\n        /**\r\n         * 各ボタンのイベント処理を追加する\r\n         */\r\n        this.addEvent = function () {\r\n            // 「START」ボタンのイベント\r\n            _this.btnStart.addEventListener('change', function () {\r\n                _this.btnStart.disabled = true;\r\n                // btnReset3.disabled = true;\r\n                _this.btnReset.disabled = true;\r\n                _this.btnReset.checked = false;\r\n                _this.imgCoin.style.visibility = 'hidden';\r\n                // 獲得ポイントバルーンの非表示解除\r\n                _this.pointBalloon.style.visibility = 'visible';\r\n                // 獲得ポイントバルーンをズームアウトする\r\n                _this.pointBalloon.classList.remove('zoomIn');\r\n                _this.pointBalloon.classList.add('zoomOut');\r\n                // スピン要素の文字色を金色に変更する\r\n                _this.setSpinFontColorGold(_this.spin1, _this.spin2, _this.spin3);\r\n                // スピン停止ボタンの色を変更する\r\n                _this.addDuringSpinClass(_this.btnStops);\r\n                _this.spinInterval1 = setInterval(function () { return _this.setRandomNumber(_this.spin1); }, 10);\r\n                _this.spinInterval2 = setInterval(function () { return _this.setRandomNumber(_this.spin2); }, 10);\r\n                _this.spinInterval3 = setInterval(function () { return _this.setRandomNumber(_this.spin3); }, 10);\r\n            });\r\n            // 「STOP」ボタンのイベント\r\n            _this.btnStops.forEach(function (target) {\r\n                target.addEventListener('click', function () { return __awaiter(_this, void 0, void 0, function () {\r\n                    var targetId, numberOfSeven, addPoint, currentRemainingCount, i;\r\n                    return __generator(this, function (_a) {\r\n                        switch (_a.label) {\r\n                            case 0:\r\n                                if (!this.spinInterval1 && !this.spinInterval2 && !this.spinInterval3) {\r\n                                    // スピン中の項目が存在しない場合は、何もしない\r\n                                    return [2 /*return*/];\r\n                                }\r\n                                targetId = target.id;\r\n                                if (!this.stopSpin(targetId)) {\r\n                                    // インターバル処理を停止できなかった場合は、何もせず処理を抜ける\r\n                                    return [2 /*return*/];\r\n                                }\r\n                                // スピン停止ボタンの色を戻す\r\n                                this.removeDuringSpinClass(target);\r\n                                if (this.spinInterval1 || this.spinInterval2 || this.spinInterval3) {\r\n                                    // スピンしている要素が 1 つでも残っている場合は、ここで処理を終了する\r\n                                    return [2 /*return*/];\r\n                                }\r\n                                numberOfSeven = this.countNumberOfSeven(this.spin1, this.spin2, this.spin3);\r\n                                addPoint = constant_1.Constant.POINT_LIST[numberOfSeven];\r\n                                currentRemainingCount = Number(this.remainingCount.textContent);\r\n                                // 残り回数を 1 減らす\r\n                                this.remainingCount.textContent = (currentRemainingCount - 1).toString();\r\n                                if (numberOfSeven === constant_1.Constant.ALL_SEVEN_COUNT) {\r\n                                    // スピン要素が 3 つとも 7 だった場合、文字色を赤に変更する\r\n                                    this.setSpinFontColorRed(this.spin1, this.spin2, this.spin3);\r\n                                }\r\n                                if (!(numberOfSeven > 0)) return [3 /*break*/, 4];\r\n                                i = 0;\r\n                                _a.label = 1;\r\n                            case 1:\r\n                                if (!(i <= constant_1.Constant.MAX_BLINKS_NUMBER)) return [3 /*break*/, 4];\r\n                                return [4 /*yield*/, this.sleep(100)];\r\n                            case 2:\r\n                                _a.sent();\r\n                                this.toggleCoinImageOnOff(this.imgCoin);\r\n                                _a.label = 3;\r\n                            case 3:\r\n                                i++;\r\n                                return [3 /*break*/, 1];\r\n                            case 4:\r\n                                if (!(addPoint > 0)) return [3 /*break*/, 6];\r\n                                // 獲得ポイントバルーンを表示する\r\n                                this.pointBalloon.classList.remove('zoomOut');\r\n                                this.pointBalloon.classList.add('zoomIn');\r\n                                this.pointBalloon.textContent = \"+\" + addPoint;\r\n                                // バルーン表示後、わずかに遅れてポイントを加算させるため、0.4 秒待機させる\r\n                                return [4 /*yield*/, this.sleep(400)];\r\n                            case 5:\r\n                                // バルーン表示後、わずかに遅れてポイントを加算させるため、0.4 秒待機させる\r\n                                _a.sent();\r\n                                this.scoreCountUp(addPoint);\r\n                                return [2 /*return*/];\r\n                            case 6:\r\n                                // ターン終了処理\r\n                                this.turnEndProcess();\r\n                                return [2 /*return*/];\r\n                        }\r\n                    });\r\n                }); });\r\n            });\r\n            // 「RESET」ボタンのイベント\r\n            _this.btnReset.addEventListener('change', function () {\r\n                var spinNumber = Number(_this.remainingCount.textContent);\r\n                if (spinNumber !== 0 && !window.confirm(constant_1.Constant.RESET_CONFIRM_MESSAGE)) {\r\n                    _this.btnReset.checked = true;\r\n                    return;\r\n                }\r\n                _this.init();\r\n            });\r\n        };\r\n        /**\r\n         * ゲームを初期状態にする\r\n         */\r\n        this.init = function () {\r\n            // リセット\r\n            _this.messageArea.textContent = constant_1.Constant.DEFALT_MESSAGE;\r\n            _this.remainingCount.textContent = constant_1.Constant.SPIN_MAX_COUNT.toString();\r\n            _this.score.textContent = '0';\r\n            _this.btnStart.disabled = false;\r\n            _this.btnStart.checked = false;\r\n            _this.btnReset.disabled = true;\r\n            _this.lblStart.classList.remove(constant_1.Constant.GAME_END_CLASS_NAME);\r\n            _this.imgCoin.style.visibility = 'hidden';\r\n            _this.pointBalloon.classList.add('zoomOut');\r\n            for (var _i = 0, _a = [_this.spin1, _this.spin2, _this.spin3]; _i < _a.length; _i++) {\r\n                var spin = _a[_i];\r\n                spin.textContent = '';\r\n            }\r\n        };\r\n        // -------------------------------------\r\n        // プライベートメソッド\r\n        // -------------------------------------\r\n        /**\r\n         * 指定された時間、処理をストップさせる\r\n         * @param ms 停止したい時間（ミリ秒）\r\n         * @returns なし\r\n         */\r\n        this.sleep = function (ms) { return new Promise(function (resolve) { return setTimeout(resolve, ms); }); };\r\n        /**\r\n         * 指定されたボタン ID に紐づくスピンインターバルを停止する\r\n         * @param targetId 対象の ID\r\n         * @returns 処理成功なら true、それ以外は false を返却する\r\n         */\r\n        this.stopSpin = function (targetId) {\r\n            switch (targetId) {\r\n                case constant_1.Constant.STOP_BUTTON_ID_LIST[1]:\r\n                    _this.stopInterval(_this.spinInterval1);\r\n                    _this.spinInterval1 = null;\r\n                    break;\r\n                case constant_1.Constant.STOP_BUTTON_ID_LIST[2]:\r\n                    _this.stopInterval(_this.spinInterval2);\r\n                    _this.spinInterval2 = null;\r\n                    break;\r\n                case constant_1.Constant.STOP_BUTTON_ID_LIST[3]:\r\n                    _this.stopInterval(_this.spinInterval3);\r\n                    _this.spinInterval3 = null;\r\n                    break;\r\n                default:\r\n                    // 未定義の ID を検出した場合は、false を返す\r\n                    return false;\r\n            }\r\n            return true;\r\n        };\r\n        /**\r\n         * スピン要素の文字色を赤色に変更する\r\n         * @param spins スピン要素群\r\n         */\r\n        this.setSpinFontColorRed = function () {\r\n            var spins = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                spins[_i] = arguments[_i];\r\n            }\r\n            for (var _a = 0, spins_1 = spins; _a < spins_1.length; _a++) {\r\n                var spin = spins_1[_a];\r\n                spin.style.color = 'red';\r\n            }\r\n        };\r\n        /**\r\n         * スピン要素の文字色を金色に変更する\r\n         * @param spins スピン要素群\r\n         */\r\n        this.setSpinFontColorGold = function () {\r\n            var spins = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                spins[_i] = arguments[_i];\r\n            }\r\n            for (var _a = 0, spins_2 = spins; _a < spins_2.length; _a++) {\r\n                var spin = spins_2[_a];\r\n                spin.style.color = 'gold';\r\n            }\r\n        };\r\n        /**\r\n         * スピン要素にセットされた 7 の数をカウントする\r\n         * @param spins スピン要素群\r\n         * @returns 7 のカウント数\r\n         */\r\n        this.countNumberOfSeven = function () {\r\n            var spins = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                spins[_i] = arguments[_i];\r\n            }\r\n            return spins.reduce(function (acc, spin) { return Number(spin.textContent) === 7 ? acc + 1 : acc; }, 0);\r\n        };\r\n        /**\r\n         * duringSpin クラスを追加する\r\n         * @param targets スピン停止ボタン要素群\r\n         */\r\n        this.addDuringSpinClass = function (targets) {\r\n            targets.forEach(function (target) { return target.classList.add('duringSpin'); });\r\n        };\r\n        /**\r\n         * duringSpin クラスを除去する\r\n         * @param target スピン停止ボタン要素\r\n         */\r\n        this.removeDuringSpinClass = function (target) {\r\n            target.classList.remove('duringSpin');\r\n        };\r\n        /**\r\n         * 0 ～ 9 の乱数を発生させ、span 要素にセットする\r\n         * @param spin 対象の span 要素\r\n         */\r\n        this.setRandomNumber = function (spin) {\r\n            var random = Math.floor(Math.random() * 9);\r\n            spin.innerText = random.toString();\r\n        };\r\n        /**\r\n         * 指定されたインターバル処理を停止させる\r\n         * @param spinInterval 対象のインターバル\r\n         */\r\n        this.stopInterval = function (spinInterval) {\r\n            if (spinInterval) {\r\n                clearInterval(spinInterval);\r\n            }\r\n        };\r\n        /**\r\n         * コイン画像の表示 ON / OFF を切り替える\r\n         * @param imgCoin コイン画像表示要素\r\n         */\r\n        this.toggleCoinImageOnOff = function (imgCoin) {\r\n            var isVisible = imgCoin.style.visibility === 'visible';\r\n            imgCoin.style.visibility = !isVisible ? 'visible' : 'hidden';\r\n        };\r\n        /**\r\n         * ターン終了時に行う処理\r\n         * @returns なし\r\n         */\r\n        this.turnEndProcess = function () {\r\n            // btnReset3.disabled = false;\r\n            _this.btnReset.disabled = false;\r\n            _this.btnReset.checked = true;\r\n            // 現在の残り回数\r\n            var currentRemainingCount = Number(_this.remainingCount.textContent);\r\n            if (currentRemainingCount === 0) {\r\n                // 現在の残り回数が 0 だった場合は、ゲーム終了とする\r\n                _this.messageArea.textContent = \"\\u3042\\u306A\\u305F\\u306E\\u6700\\u7D42\\u30B9\\u30B3\\u30A2\\u306F \" + _this.score.textContent + \" \\u30DD\\u30A4\\u30F3\\u30C8\\u3067\\u3059\\uFF01\";\r\n                _this.lblStart.classList.add(constant_1.Constant.GAME_END_CLASS_NAME);\r\n                return;\r\n            }\r\n            // btnSpin.disabled = false;\r\n            _this.btnStart.disabled = false;\r\n            _this.btnStart.checked = false;\r\n        };\r\n        this.messageArea = document.getElementById('messageArea');\r\n        this.spin1 = document.getElementById('spin1');\r\n        this.spin2 = document.getElementById('spin2');\r\n        this.spin3 = document.getElementById('spin3');\r\n        this.remainingCount = document.getElementById('remainingCount');\r\n        this.score = document.getElementById('score');\r\n        this.imgCoin = document.getElementById('imgCoin');\r\n        this.btnStart = document.getElementById('toggle--push--glow');\r\n        this.lblStart = document.getElementById('lblStart');\r\n        this.btnStops = document.querySelectorAll('.btnStops');\r\n        this.btnReset = document.getElementById('toggle--push--glow--reset');\r\n        this.pointBalloon = document.getElementById('pointBalloon');\r\n        this.spinInterval1 = null;\r\n        this.spinInterval2 = null;\r\n        this.spinInterval3 = null;\r\n    }\r\n    /**\r\n     * 指定された値でスコアを更新する\r\n     * @param addPoint 加算ポイント数\r\n     */\r\n    Lucky7.prototype.scoreCountUp = function (addPoint) {\r\n        var _this = this;\r\n        var startTime = Date.now();\r\n        var from = Number(this.score.textContent);\r\n        var to = from + addPoint;\r\n        var timer = setInterval(function () {\r\n            var elapsedTime = Date.now() - startTime;\r\n            var progress = elapsedTime / constant_1.Constant.DURATION;\r\n            if (progress < 1) {\r\n                _this.score.textContent = (Math.floor(from + progress * (to - from))).toString();\r\n            }\r\n            else {\r\n                _this.score.textContent = to.toString();\r\n                clearInterval(timer);\r\n                // setInterval は非同期で実行されるため、カウントアップ処理完了を検知できないので、\r\n                // ここでターン終了処理を呼び出す\r\n                _this.turnEndProcess();\r\n            }\r\n        }, 16);\r\n    };\r\n    return Lucky7;\r\n}());\r\nexports.Lucky7 = Lucky7;\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n__webpack_require__(752);\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}