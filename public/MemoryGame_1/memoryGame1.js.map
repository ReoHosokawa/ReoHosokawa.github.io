{"version":3,"sources":["webpack://memory_weakness/./node_modules/linq/linq.js","webpack://memory_weakness/./src/app.ts","webpack://memory_weakness/./src/constant.ts","webpack://memory_weakness/./src/memory_weakness.ts","webpack://memory_weakness/webpack/bootstrap","webpack://memory_weakness/webpack/runtime/amd options","webpack://memory_weakness/webpack/runtime/make namespace object","webpack://memory_weakness/webpack/startup"],"names":["root","undefined","Functions","Identity","x","True","Blank","Types","funcCache","Utils","createLambda","expression","f","indexOf","match","regexp","RegExp","maxLength","exec","paramNumber","length","argArray","i","dollar","j","push","args","Array","prototype","join","call","Function","expr","isIEnumerable","obj","Enumerator","e","defineProperty","Object","defineProperties","target","methodName","value","enumerable","configurable","writable","compare","a","b","dispose","hasNativeIteratorSupport","Symbol","iterator","IEnumerator","initialize","tryGetNext","yielder","Yielder","state","this","current","moveNext","apply","yieldReturn","yieldBreak","Enumerable","getEnumerator","createEnumerable","createEnumerator","extendTo","type","enumerableProto","typeProto","ArrayEnumerable","from","func","recallFrom","getSource","choice","arguments","toArray","Math","floor","random","cycle","index","empty","repeat","charAt","next","done","enumerator","isFirst","atEnd","item","Windows","first","array","key","hasOwnProperty","make","element","matches","input","pattern","flags","source","regex","range","start","count","step","rangeDown","rangeTo","to","take","repeatWithFinalize","initializer","finalizer","generate","toInfinity","toNegativeInfinity","unfold","seed","defer","enumerableFactory","traverseBreadthFirst","resultSelector","nestLevel","buffer","selectMany","any","traverseDepthFirst","enumeratorStack","pop","forEach","s","flatten","middleEnumerator","pairwise","selector","prev","scan","isUseSeed","select","WhereSelectEnumerable","collectionSelector","middleSeq","where","predicate","WhereEnumerable","choose","result","ofType","typeName","Number","String","Boolean","zip","second","firstEnumerator","secondEnumerator","enumerators","concat","takeExceptLast","all","merge","splice","inner","outerKeySelector","innerKeySelector","compareSelector","outerEnumerator","lookup","innerElements","innerCount","toLookup","innerElement","get","groupJoin","isEmpty","insert","isEnumerated","alternate","alternateValueOrSequence","alternateSequence","alternateEnumerator","retVal","contains","defaultIfEmpty","defaultValue","distinct","except","distinctUntilChanged","compareKey","initial","keys","Dictionary","add","intersect","outs","sequenceEqual","union","orderBy","keySelector","comparer","OrderedEnumerable","orderByDescending","reverse","shuffle","weightedSample","weightSelector","sortedByBound","totalWeight","weight","bound","draw","lower","upper","groupBy","elementSelector","toEnumerable","partitionBy","hasResultSelector","group","Grouping","hasNext","aggregate","last","average","sum","max","min","maxBy","minBy","elementAt","found","Error","elementAtOrDefault","firstOrDefault","lastOrDefault","single","singleOrDefault","skip","skipWhile","isSkipEnd","takeWhile","q","shift","takeFromLast","sourceEnumerator","lastIndexOf","cast","asEnumerable","dict","Lookup","toObject","toDictionary","toJSONString","replacer","space","JSON","stringify","toJoinedString","separator","doAction","action","write","document","writeLine","writeln","force","letBind","share","sharedEnumerator","disposed","DisposableEnumerable","memoize","cache","catchError","handler","finallyAction","log","console","trace","message","descending","parent","createOrderedEnumerable","thenBy","thenByDescending","indexes","self","sortContext","SortContext","create","GenerateKeys","sort","child","orderedEnumerable","currentContext","context","len","index1","index2","comparison","prevSource","prevPredicate","prevSelector","callHasOwnProperty","computeHashCode","toString","HashEntry","EntryList","addLast","entry","replace","newEntry","remove","countField","entryList","buckets","hash","set","clear","currentEntry","dictionary","kvp","groupKey","elements","module","exports","memory_weakness_1","window","onload","MemoryWeakness","init","addEventListener","preventDefault","passive","clickTypeValue","ontouchstart","getElementById","textContent","Constant","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","rejected","then","__generator","body","y","t","g","_","label","sent","trys","ops","verb","n","v","op","TypeError","__importDefault","mod","__esModule","constant_1","linq_1","_this","cardList","selectCardCount","selectCardList","isSelectable","isGameClear","isGameOver","pairCount","missCount","filePath","ImageFolderPath","DefaultCardFileName","ImageExtension","cardImages","$image","src","selectCard","resetButton","resetGame","removeLifeImages","addLifeImages","removeGrayOut","pairCountArea","createPairCountValue","missCountArea","createMissCountValue","messageArea","createStatusMessage","MaxMissNumber","shuffleCards","cardNumber","isPair","_a","dataset","createTrumpImagePath","SelectableNumber","showResultMessage","HitClassName","MissClassName","removeLife","sleep","MaxPair","innerHTML","classList","setCardDisabled","flipAllCards","turnCardFaceDown","confirm","baseRanks","createNumberList","StartCardNumber","EndCardNumber","ranks","default","basePairList","createPairList","end","maxPair","cardTypeList","CardTypeList","types","pairList","rank","isJoker","JokerNumber","cardTypeList_1","shuffleCardTypes","jokerTypes","cardData","fileName","JokerType","zeroPadding","$life","createElement","id","LifeImageClassName","LifeImageFileName","lifeArea","appendChild","querySelectorAll","removeChild","GrayOutClassName","$target","classValue","_i","$card","removeEventListener","slice","ms","setTimeout","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","amdO","r","toStringTag"],"mappings":"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","file":"memoryGame1.js","sourcesContent":["﻿/*--------------------------------------------------------------------------\r\n * linq.js - LINQ for JavaScript\r\n * licensed under MIT License\r\n *------------------------------------------------------------------------*/\r\n\r\n(function (root, undefined) {\r\n    // ReadOnly Function\r\n    var Functions = {\r\n        Identity: function (x) { return x; },\r\n        True: function () { return true; },\r\n        Blank: function () { }\r\n    };\r\n\r\n    // const Type\r\n    var Types = {\r\n        Boolean: typeof true,\r\n        Number: typeof 0,\r\n        String: typeof \"\",\r\n        Object: typeof {},\r\n        Undefined: typeof undefined,\r\n        Function: typeof function () { }\r\n    };\r\n\r\n    // createLambda cache\r\n    var funcCache = { \"\": Functions.Identity };\r\n\r\n    // private utility methods\r\n    var Utils = {\r\n        // Create anonymous function from lambda expression string\r\n        createLambda: function (expression) {\r\n            if (expression == null) return Functions.Identity;\r\n            if (typeof expression === Types.String) {\r\n                // get from cache\r\n                var f = funcCache[expression];\r\n                if (f != null) {\r\n                    return f;\r\n                }\r\n\r\n                if (expression.indexOf(\"=>\") === -1) {\r\n                    var regexp = new RegExp(\"[$]+\", \"g\");\r\n\r\n                    var maxLength = 0;\r\n                    var match;\r\n                    while ((match = regexp.exec(expression)) != null) {\r\n                        var paramNumber = match[0].length;\r\n                        if (paramNumber > maxLength) {\r\n                            maxLength = paramNumber;\r\n                        }\r\n                    }\r\n\r\n                    var argArray = [];\r\n                    for (var i = 1; i <= maxLength; i++) {\r\n                        var dollar = \"\";\r\n                        for (var j = 0; j < i; j++) {\r\n                            dollar += \"$\";\r\n                        }\r\n                        argArray.push(dollar);\r\n                    }\r\n\r\n                    var args = Array.prototype.join.call(argArray, \",\");\r\n\r\n                    f = new Function(args, \"return \" + expression);\r\n                    funcCache[expression] = f;\r\n                    return f;\r\n                }\r\n                else {\r\n                    var expr = expression.match(/^[(\\s]*([^()]*?)[)\\s]*=>(.*)/);\r\n                    f = new Function(expr[1], (expr[2].match(/\\breturn\\b/) ? expr[2] : \"return \" + expr[2]));\r\n                    funcCache[expression] = f;\r\n                    return f;\r\n                }\r\n            }\r\n            return expression;\r\n        },\r\n\r\n        isIEnumerable: function (obj) {\r\n            if (typeof Enumerator !== Types.Undefined) {\r\n                try {\r\n                    new Enumerator(obj); // check JScript(IE)'s Enumerator\r\n                    return true;\r\n                }\r\n                catch (e) { }\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        // IE8's defineProperty is defined but cannot use, therefore check defineProperties\r\n        defineProperty: (Object.defineProperties != null)\r\n            ? function (target, methodName, value) {\r\n                Object.defineProperty(target, methodName, {\r\n                    enumerable: false,\r\n                    configurable: true,\r\n                    writable: true,\r\n                    value: value\r\n                })\r\n            }\r\n            : function (target, methodName, value) {\r\n                target[methodName] = value;\r\n            },\r\n\r\n        compare: function (a, b) {\r\n            return (a === b) ? 0\r\n                 : (a > b) ? 1\r\n                 : -1;\r\n        },\r\n\r\n        dispose: function (obj) {\r\n            if (obj != null) obj.dispose();\r\n        },\r\n\r\n        hasNativeIteratorSupport: function () {\r\n            return typeof Symbol !== 'undefined' && typeof Symbol.iterator !== 'undefined';\r\n        }\r\n    };\r\n\r\n    // IEnumerator State\r\n    var State = { Before: 0, Running: 1, After: 2 };\r\n\r\n    // \"Enumerator\" is conflict JScript's \"Enumerator\"\r\n    var IEnumerator = function (initialize, tryGetNext, dispose) {\r\n        var yielder = new Yielder();\r\n        var state = State.Before;\r\n\r\n        this.current = yielder.current;\r\n\r\n        this.moveNext = function () {\r\n            try {\r\n                switch (state) {\r\n                    case State.Before:\r\n                        state = State.Running;\r\n                        initialize();\r\n                        // fall through\r\n                    case State.Running:\r\n                        if (tryGetNext.apply(yielder)) {\r\n                            return true;\r\n                        }\r\n                        else {\r\n                            this.dispose();\r\n                            return false;\r\n                        }\r\n                    case State.After:\r\n                        return false;\r\n                }\r\n            }\r\n            catch (e) {\r\n                this.dispose();\r\n                throw e;\r\n            }\r\n        };\r\n\r\n        this.dispose = function () {\r\n            if (state != State.Running) return;\r\n\r\n            try {\r\n                dispose();\r\n            }\r\n            finally {\r\n                state = State.After;\r\n            }\r\n        };\r\n    };\r\n\r\n    // for tryGetNext\r\n    var Yielder = function () {\r\n        var current = null;\r\n        this.current = function () { return current; };\r\n        this.yieldReturn = function (value) {\r\n            current = value;\r\n            return true;\r\n        };\r\n        this.yieldBreak = function () {\r\n            return false;\r\n        };\r\n    };\r\n\r\n    // Enumerable constuctor\r\n    var Enumerable = function (getEnumerator) {\r\n        this.getEnumerator = getEnumerator;\r\n    };\r\n\r\n    // Utility\r\n\r\n    Enumerable.Utils = {}; // container\r\n\r\n    Enumerable.Utils.createLambda = function (expression) {\r\n        return Utils.createLambda(expression);\r\n    };\r\n\r\n    Enumerable.Utils.createEnumerable = function (getEnumerator) {\r\n        return new Enumerable(getEnumerator);\r\n    };\r\n\r\n    Enumerable.Utils.createEnumerator = function (initialize, tryGetNext, dispose) {\r\n        return new IEnumerator(initialize, tryGetNext, dispose);\r\n    };\r\n\r\n    Enumerable.Utils.extendTo = function (type) {\r\n        var typeProto = type.prototype;\r\n        var enumerableProto;\r\n\r\n        if (type === Array) {\r\n            enumerableProto = ArrayEnumerable.prototype;\r\n            Utils.defineProperty(typeProto, \"getSource\", function () {\r\n                return this;\r\n            });\r\n        }\r\n        else {\r\n            enumerableProto = Enumerable.prototype;\r\n            Utils.defineProperty(typeProto, \"getEnumerator\", function () {\r\n                return Enumerable.from(this).getEnumerator();\r\n            });\r\n        }\r\n\r\n        for (var methodName in enumerableProto) {\r\n            var func = enumerableProto[methodName];\r\n\r\n            // already extended\r\n            if (typeProto[methodName] == func) continue;\r\n\r\n            // already defined(example Array#reverse/join/forEach...)\r\n            if (typeProto[methodName] != null) {\r\n                methodName = methodName + \"ByLinq\";\r\n                if (typeProto[methodName] == func) continue; // recheck\r\n            }\r\n\r\n            if (func instanceof Function) {\r\n                Utils.defineProperty(typeProto, methodName, func);\r\n            }\r\n        }\r\n    };\r\n\r\n    Enumerable.Utils.recallFrom = function (type) {\r\n        var typeProto = type.prototype;\r\n        var enumerableProto;\r\n\r\n        if (type === Array) {\r\n            enumerableProto = ArrayEnumerable.prototype;\r\n            delete typeProto.getSource;\r\n        }\r\n        else {\r\n            enumerableProto = Enumerable.prototype;\r\n            delete typeProto.getEnumerator;\r\n        }\r\n\r\n        for (var methodName in enumerableProto) {\r\n            var func = enumerableProto[methodName];\r\n\r\n            if (typeProto[methodName + 'ByLinq']) {\r\n                delete typeProto[methodName + 'ByLinq'];\r\n            }\r\n            else if (typeProto[methodName] == func && func instanceof Function) {\r\n                delete typeProto[methodName];\r\n            }\r\n        }\r\n    };\r\n\r\n    // Generator\r\n\r\n    Enumerable.choice = function () // variable argument\r\n    {\r\n        var args = arguments;\r\n\r\n        return new Enumerable(function () {\r\n            return new IEnumerator(\r\n                function () {\r\n                    args = (args[0] instanceof Array) ? args[0]\r\n                        : (args[0].getEnumerator != null) ? args[0].toArray()\r\n                        : args;\r\n                },\r\n                function () {\r\n                    return this.yieldReturn(args[Math.floor(Math.random() * args.length)]);\r\n                },\r\n                Functions.Blank);\r\n        });\r\n    };\r\n\r\n    Enumerable.cycle = function () // variable argument\r\n    {\r\n        var args = arguments;\r\n\r\n        return new Enumerable(function () {\r\n            var index = 0;\r\n            return new IEnumerator(\r\n                function () {\r\n                    args = (args[0] instanceof Array) ? args[0]\r\n                        : (args[0].getEnumerator != null) ? args[0].toArray()\r\n                        : args;\r\n                },\r\n                function () {\r\n                    if (index >= args.length) index = 0;\r\n                    return this.yieldReturn(args[index++]);\r\n                },\r\n                Functions.Blank);\r\n        });\r\n    };\r\n\r\n    Enumerable.empty = function () {\r\n        return new Enumerable(function () {\r\n            return new IEnumerator(\r\n                Functions.Blank,\r\n                function () { return false; },\r\n                Functions.Blank);\r\n        });\r\n    };\r\n\r\n    Enumerable.from = function (obj) {\r\n        if (obj == null) {\r\n            return Enumerable.empty();\r\n        }\r\n        if (obj instanceof Enumerable) {\r\n            return obj;\r\n        }\r\n        if (typeof obj == Types.Number || typeof obj == Types.Boolean) {\r\n            return Enumerable.repeat(obj, 1);\r\n        }\r\n        if (typeof obj == Types.String) {\r\n            return new Enumerable(function () {\r\n                var index = 0;\r\n                return new IEnumerator(\r\n                    Functions.Blank,\r\n                    function () {\r\n                        return (index < obj.length) ? this.yieldReturn(obj.charAt(index++)) : false;\r\n                    },\r\n                    Functions.Blank);\r\n            });\r\n        }\r\n        if (typeof obj != Types.Function) {\r\n            // array or array like object\r\n            if (typeof obj.length == Types.Number) {\r\n                return new ArrayEnumerable(obj);\r\n            }\r\n\r\n            // iterable object\r\n            if (typeof Symbol !== 'undefined' && typeof obj[Symbol.iterator] !== 'undefined') {\r\n                return new Enumerable(function () {\r\n                    return new IEnumerator(\r\n                        Functions.Blank,\r\n                        function () {\r\n                            var next = obj.next();\r\n                            return (next.done ? false : (this.yieldReturn(next.value)));\r\n                        },\r\n                        Functions.Blank);\r\n                });\r\n            }\r\n\r\n            // JScript's IEnumerable\r\n            if (!(obj instanceof Object) && Utils.isIEnumerable(obj)) {\r\n                return new Enumerable(function () {\r\n                    var isFirst = true;\r\n                    var enumerator;\r\n                    return new IEnumerator(\r\n                        function () { enumerator = new Enumerator(obj); },\r\n                        function () {\r\n                            if (isFirst) isFirst = false;\r\n                            else enumerator.moveNext();\r\n\r\n                            return (enumerator.atEnd()) ? false : this.yieldReturn(enumerator.item());\r\n                        },\r\n                        Functions.Blank);\r\n                });\r\n            }\r\n\r\n            // WinMD IIterable<T>\r\n            if (typeof Windows === Types.Object && typeof obj.first === Types.Function) {\r\n                return new Enumerable(function () {\r\n                    var isFirst = true;\r\n                    var enumerator;\r\n                    return new IEnumerator(\r\n                        function () { enumerator = obj.first(); },\r\n                        function () {\r\n                            if (isFirst) isFirst = false;\r\n                            else enumerator.moveNext();\r\n\r\n                            return (enumerator.hasCurrent) ? this.yieldReturn(enumerator.current) : this.yieldBreak();\r\n                        },\r\n                        Functions.Blank);\r\n                });\r\n            }\r\n        }\r\n\r\n        // case function/object : Create keyValuePair[]\r\n        return new Enumerable(function () {\r\n            var array = [];\r\n            var index = 0;\r\n\r\n            return new IEnumerator(\r\n                function () {\r\n                    for (var key in obj) {\r\n                        var value = obj[key];\r\n                        if (!(value instanceof Function) && Object.prototype.hasOwnProperty.call(obj, key)) {\r\n                            array.push({ key: key, value: value });\r\n                        }\r\n                    }\r\n                },\r\n                function () {\r\n                    return (index < array.length)\r\n                        ? this.yieldReturn(array[index++])\r\n                        : false;\r\n                },\r\n                Functions.Blank);\r\n        });\r\n    },\r\n\r\n    Enumerable.make = function (element) {\r\n        return Enumerable.repeat(element, 1);\r\n    };\r\n\r\n    // Overload:function(input, pattern)\r\n    // Overload:function(input, pattern, flags)\r\n    Enumerable.matches = function (input, pattern, flags) {\r\n        if (flags == null) flags = \"\";\r\n        if (pattern instanceof RegExp) {\r\n            flags += (pattern.ignoreCase) ? \"i\" : \"\";\r\n            flags += (pattern.multiline) ? \"m\" : \"\";\r\n            pattern = pattern.source;\r\n        }\r\n        if (flags.indexOf(\"g\") === -1) flags += \"g\";\r\n\r\n        return new Enumerable(function () {\r\n            var regex;\r\n            return new IEnumerator(\r\n                function () { regex = new RegExp(pattern, flags); },\r\n                function () {\r\n                    var match = regex.exec(input);\r\n                    return (match) ? this.yieldReturn(match) : false;\r\n                },\r\n                Functions.Blank);\r\n        });\r\n    };\r\n\r\n    // Overload:function(start, count)\r\n    // Overload:function(start, count, step)\r\n    Enumerable.range = function (start, count, step) {\r\n        if (step == null) step = 1;\r\n\r\n        return new Enumerable(function () {\r\n            var value;\r\n            var index = 0;\r\n\r\n            return new IEnumerator(\r\n                function () { value = start - step; },\r\n                function () {\r\n                    return (index++ < count)\r\n                        ? this.yieldReturn(value += step)\r\n                        : this.yieldBreak();\r\n                },\r\n                Functions.Blank);\r\n        });\r\n    };\r\n\r\n    // Overload:function(start, count)\r\n    // Overload:function(start, count, step)\r\n    Enumerable.rangeDown = function (start, count, step) {\r\n        if (step == null) step = 1;\r\n\r\n        return new Enumerable(function () {\r\n            var value;\r\n            var index = 0;\r\n\r\n            return new IEnumerator(\r\n                function () { value = start + step; },\r\n                function () {\r\n                    return (index++ < count)\r\n                        ? this.yieldReturn(value -= step)\r\n                        : this.yieldBreak();\r\n                },\r\n                Functions.Blank);\r\n        });\r\n    };\r\n\r\n    // Overload:function(start, to)\r\n    // Overload:function(start, to, step)\r\n    Enumerable.rangeTo = function (start, to, step) {\r\n        if (step == null) step = 1;\r\n\r\n        if (start < to) {\r\n            return new Enumerable(function () {\r\n                var value;\r\n\r\n                return new IEnumerator(\r\n                function () { value = start - step; },\r\n                function () {\r\n                    var next = value += step;\r\n                    return (next <= to)\r\n                        ? this.yieldReturn(next)\r\n                        : this.yieldBreak();\r\n                },\r\n                Functions.Blank);\r\n            });\r\n        }\r\n        else {\r\n            return new Enumerable(function () {\r\n                var value;\r\n\r\n                return new IEnumerator(\r\n                function () { value = start + step; },\r\n                function () {\r\n                    var next = value -= step;\r\n                    return (next >= to)\r\n                        ? this.yieldReturn(next)\r\n                        : this.yieldBreak();\r\n                },\r\n                Functions.Blank);\r\n            });\r\n        }\r\n    };\r\n\r\n    // Overload:function(element)\r\n    // Overload:function(element, count)\r\n    Enumerable.repeat = function (element, count) {\r\n        if (count != null) return Enumerable.repeat(element).take(count);\r\n\r\n        return new Enumerable(function () {\r\n            return new IEnumerator(\r\n                Functions.Blank,\r\n                function () { return this.yieldReturn(element); },\r\n                Functions.Blank);\r\n        });\r\n    };\r\n\r\n    Enumerable.repeatWithFinalize = function (initializer, finalizer) {\r\n        initializer = Utils.createLambda(initializer);\r\n        finalizer = Utils.createLambda(finalizer);\r\n\r\n        return new Enumerable(function () {\r\n            var element;\r\n            return new IEnumerator(\r\n                function () { element = initializer(); },\r\n                function () { return this.yieldReturn(element); },\r\n                function () {\r\n                    if (element != null) {\r\n                        finalizer(element);\r\n                        element = null;\r\n                    }\r\n                });\r\n        });\r\n    };\r\n\r\n    // Overload:function(func)\r\n    // Overload:function(func, count)\r\n    Enumerable.generate = function (func, count) {\r\n        if (count != null) return Enumerable.generate(func).take(count);\r\n        func = Utils.createLambda(func);\r\n\r\n        return new Enumerable(function () {\r\n            return new IEnumerator(\r\n                Functions.Blank,\r\n                function () { return this.yieldReturn(func()); },\r\n                Functions.Blank);\r\n        });\r\n    };\r\n\r\n    // Overload:function()\r\n    // Overload:function(start)\r\n    // Overload:function(start, step)\r\n    Enumerable.toInfinity = function (start, step) {\r\n        if (start == null) start = 0;\r\n        if (step == null) step = 1;\r\n\r\n        return new Enumerable(function () {\r\n            var value;\r\n            return new IEnumerator(\r\n                function () { value = start - step; },\r\n                function () { return this.yieldReturn(value += step); },\r\n                Functions.Blank);\r\n        });\r\n    };\r\n\r\n    // Overload:function()\r\n    // Overload:function(start)\r\n    // Overload:function(start, step)\r\n    Enumerable.toNegativeInfinity = function (start, step) {\r\n        if (start == null) start = 0;\r\n        if (step == null) step = 1;\r\n\r\n        return new Enumerable(function () {\r\n            var value;\r\n            return new IEnumerator(\r\n                function () { value = start + step; },\r\n                function () { return this.yieldReturn(value -= step); },\r\n                Functions.Blank);\r\n        });\r\n    };\r\n\r\n    Enumerable.unfold = function (seed, func) {\r\n        func = Utils.createLambda(func);\r\n\r\n        return new Enumerable(function () {\r\n            var isFirst = true;\r\n            var value;\r\n            return new IEnumerator(\r\n                Functions.Blank,\r\n                function () {\r\n                    if (isFirst) {\r\n                        isFirst = false;\r\n                        value = seed;\r\n                        return this.yieldReturn(value);\r\n                    }\r\n                    value = func(value);\r\n                    return this.yieldReturn(value);\r\n                },\r\n                Functions.Blank);\r\n        });\r\n    };\r\n\r\n    Enumerable.defer = function (enumerableFactory) {\r\n\r\n        return new Enumerable(function () {\r\n            var enumerator;\r\n\r\n            return new IEnumerator(\r\n                function () { enumerator = Enumerable.from(enumerableFactory()).getEnumerator(); },\r\n                function () {\r\n                    return (enumerator.moveNext())\r\n                        ? this.yieldReturn(enumerator.current())\r\n                        : this.yieldBreak();\r\n                },\r\n                function () {\r\n                    Utils.dispose(enumerator);\r\n                });\r\n        });\r\n    };\r\n\r\n    // Extension Methods\r\n\r\n    /* Projection and Filtering Methods */\r\n\r\n    // Overload:function(func)\r\n    // Overload:function(func, resultSelector<element>)\r\n    // Overload:function(func, resultSelector<element, nestLevel>)\r\n    Enumerable.prototype.traverseBreadthFirst = function (func, resultSelector) {\r\n        var source = this;\r\n        func = Utils.createLambda(func);\r\n        resultSelector = Utils.createLambda(resultSelector);\r\n\r\n        return new Enumerable(function () {\r\n            var enumerator;\r\n            var nestLevel = 0;\r\n            var buffer = [];\r\n\r\n            return new IEnumerator(\r\n                function () { enumerator = source.getEnumerator(); },\r\n                function () {\r\n                    while (true) {\r\n                        if (enumerator.moveNext()) {\r\n                            buffer.push(enumerator.current());\r\n                            return this.yieldReturn(resultSelector(enumerator.current(), nestLevel));\r\n                        }\r\n\r\n                        var next = Enumerable.from(buffer).selectMany(function (x) { return func(x); });\r\n                        if (!next.any()) {\r\n                            return false;\r\n                        }\r\n                        else {\r\n                            nestLevel++;\r\n                            buffer = [];\r\n                            Utils.dispose(enumerator);\r\n                            enumerator = next.getEnumerator();\r\n                        }\r\n                    }\r\n                },\r\n                function () { Utils.dispose(enumerator); });\r\n        });\r\n    };\r\n\r\n    // Overload:function(func)\r\n    // Overload:function(func, resultSelector<element>)\r\n    // Overload:function(func, resultSelector<element, nestLevel>)\r\n    Enumerable.prototype.traverseDepthFirst = function (func, resultSelector) {\r\n        var source = this;\r\n        func = Utils.createLambda(func);\r\n        resultSelector = Utils.createLambda(resultSelector);\r\n\r\n        return new Enumerable(function () {\r\n            var enumeratorStack = [];\r\n            var enumerator;\r\n\r\n            return new IEnumerator(\r\n                function () { enumerator = source.getEnumerator(); },\r\n                function () {\r\n                    while (true) {\r\n                        if (enumerator.moveNext()) {\r\n                            var value = resultSelector(enumerator.current(), enumeratorStack.length);\r\n                            enumeratorStack.push(enumerator);\r\n                            enumerator = Enumerable.from(func(enumerator.current())).getEnumerator();\r\n                            return this.yieldReturn(value);\r\n                        }\r\n\r\n                        if (enumeratorStack.length <= 0) return false;\r\n                        Utils.dispose(enumerator);\r\n                        enumerator = enumeratorStack.pop();\r\n                    }\r\n                },\r\n                function () {\r\n                    try {\r\n                        Utils.dispose(enumerator);\r\n                    }\r\n                    finally {\r\n                        Enumerable.from(enumeratorStack).forEach(function (s) { s.dispose(); });\r\n                    }\r\n                });\r\n        });\r\n    };\r\n\r\n    Enumerable.prototype.flatten = function () {\r\n        var source = this;\r\n\r\n        return new Enumerable(function () {\r\n            var enumerator;\r\n            var middleEnumerator = null;\r\n\r\n            return new IEnumerator(\r\n                function () { enumerator = source.getEnumerator(); },\r\n                function () {\r\n                    while (true) {\r\n                        if (middleEnumerator != null) {\r\n                            if (middleEnumerator.moveNext()) {\r\n                                return this.yieldReturn(middleEnumerator.current());\r\n                            }\r\n                            else {\r\n                                middleEnumerator = null;\r\n                            }\r\n                        }\r\n\r\n                        if (enumerator.moveNext()) {\r\n                            if (enumerator.current() instanceof Array) {\r\n                                Utils.dispose(middleEnumerator);\r\n                                middleEnumerator = Enumerable.from(enumerator.current())\r\n                                    .selectMany(Functions.Identity)\r\n                                    .flatten()\r\n                                    .getEnumerator();\r\n                                continue;\r\n                            }\r\n                            else {\r\n                                return this.yieldReturn(enumerator.current());\r\n                            }\r\n                        }\r\n\r\n                        return false;\r\n                    }\r\n                },\r\n                function () {\r\n                    try {\r\n                        Utils.dispose(enumerator);\r\n                    }\r\n                    finally {\r\n                        Utils.dispose(middleEnumerator);\r\n                    }\r\n                });\r\n        });\r\n    };\r\n\r\n    Enumerable.prototype.pairwise = function (selector) {\r\n        var source = this;\r\n        selector = Utils.createLambda(selector);\r\n\r\n        return new Enumerable(function () {\r\n            var enumerator;\r\n\r\n            return new IEnumerator(\r\n                function () {\r\n                    enumerator = source.getEnumerator();\r\n                    enumerator.moveNext();\r\n                },\r\n                function () {\r\n                    var prev = enumerator.current();\r\n                    return (enumerator.moveNext())\r\n                        ? this.yieldReturn(selector(prev, enumerator.current()))\r\n                        : false;\r\n                },\r\n                function () { Utils.dispose(enumerator); });\r\n        });\r\n    };\r\n\r\n    // Overload:function(func)\r\n    // Overload:function(seed,func<value,element>)\r\n    Enumerable.prototype.scan = function (seed, func) {\r\n        var isUseSeed;\r\n        if (func == null) {\r\n            func = Utils.createLambda(seed); // arguments[0]\r\n            isUseSeed = false;\r\n        } else {\r\n            func = Utils.createLambda(func);\r\n            isUseSeed = true;\r\n        }\r\n        var source = this;\r\n\r\n        return new Enumerable(function () {\r\n            var enumerator;\r\n            var value;\r\n            var isFirst = true;\r\n\r\n            return new IEnumerator(\r\n                function () { enumerator = source.getEnumerator(); },\r\n                function () {\r\n                    if (isFirst) {\r\n                        isFirst = false;\r\n                        if (!isUseSeed) {\r\n                            if (enumerator.moveNext()) {\r\n                                return this.yieldReturn(value = enumerator.current());\r\n                            }\r\n                        }\r\n                        else {\r\n                            return this.yieldReturn(value = seed);\r\n                        }\r\n                    }\r\n\r\n                    return (enumerator.moveNext())\r\n                        ? this.yieldReturn(value = func(value, enumerator.current()))\r\n                        : false;\r\n                },\r\n                function () { Utils.dispose(enumerator); });\r\n        });\r\n    };\r\n\r\n    // Overload:function(selector<element>)\r\n    // Overload:function(selector<element,index>)\r\n    Enumerable.prototype.select = function (selector) {\r\n        selector = Utils.createLambda(selector);\r\n\r\n        if (selector.length <= 1) {\r\n            return new WhereSelectEnumerable(this, null, selector);\r\n        }\r\n        else {\r\n            var source = this;\r\n\r\n            return new Enumerable(function () {\r\n                var enumerator;\r\n                var index = 0;\r\n\r\n                return new IEnumerator(\r\n                    function () { enumerator = source.getEnumerator(); },\r\n                    function () {\r\n                        return (enumerator.moveNext())\r\n                            ? this.yieldReturn(selector(enumerator.current(), index++))\r\n                            : false;\r\n                    },\r\n                    function () { Utils.dispose(enumerator); });\r\n            });\r\n        }\r\n    };\r\n\r\n    // Overload:function(collectionSelector<element>)\r\n    // Overload:function(collectionSelector<element,index>)\r\n    // Overload:function(collectionSelector<element>,resultSelector)\r\n    // Overload:function(collectionSelector<element,index>,resultSelector)\r\n    Enumerable.prototype.selectMany = function (collectionSelector, resultSelector) {\r\n        var source = this;\r\n        collectionSelector = Utils.createLambda(collectionSelector);\r\n        if (resultSelector == null) resultSelector = function (a, b) { return b; };\r\n        resultSelector = Utils.createLambda(resultSelector);\r\n\r\n        return new Enumerable(function () {\r\n            var enumerator;\r\n            var middleEnumerator = undefined;\r\n            var index = 0;\r\n\r\n            return new IEnumerator(\r\n                function () { enumerator = source.getEnumerator(); },\r\n                function () {\r\n                    if (middleEnumerator === undefined) {\r\n                        if (!enumerator.moveNext()) return false;\r\n                    }\r\n                    do {\r\n                        if (middleEnumerator == null) {\r\n                            var middleSeq = collectionSelector(enumerator.current(), index++);\r\n                            middleEnumerator = Enumerable.from(middleSeq).getEnumerator();\r\n                        }\r\n                        if (middleEnumerator.moveNext()) {\r\n                            return this.yieldReturn(resultSelector(enumerator.current(), middleEnumerator.current()));\r\n                        }\r\n                        Utils.dispose(middleEnumerator);\r\n                        middleEnumerator = null;\r\n                    } while (enumerator.moveNext());\r\n                    return false;\r\n                },\r\n                function () {\r\n                    try {\r\n                        Utils.dispose(enumerator);\r\n                    }\r\n                    finally {\r\n                        Utils.dispose(middleEnumerator);\r\n                    }\r\n                });\r\n        });\r\n    };\r\n\r\n    // Overload:function(predicate<element>)\r\n    // Overload:function(predicate<element,index>)\r\n    Enumerable.prototype.where = function (predicate) {\r\n        predicate = Utils.createLambda(predicate);\r\n\r\n        if (predicate.length <= 1) {\r\n            return new WhereEnumerable(this, predicate);\r\n        }\r\n        else {\r\n            var source = this;\r\n\r\n            return new Enumerable(function () {\r\n                var enumerator;\r\n                var index = 0;\r\n\r\n                return new IEnumerator(\r\n                    function () { enumerator = source.getEnumerator(); },\r\n                    function () {\r\n                        while (enumerator.moveNext()) {\r\n                            if (predicate(enumerator.current(), index++)) {\r\n                                return this.yieldReturn(enumerator.current());\r\n                            }\r\n                        }\r\n                        return false;\r\n                    },\r\n                    function () { Utils.dispose(enumerator); });\r\n            });\r\n        }\r\n    };\r\n\r\n\r\n    // Overload:function(selector<element>)\r\n    // Overload:function(selector<element,index>)\r\n    Enumerable.prototype.choose = function (selector) {\r\n        selector = Utils.createLambda(selector);\r\n        var source = this;\r\n\r\n        return new Enumerable(function () {\r\n            var enumerator;\r\n            var index = 0;\r\n\r\n            return new IEnumerator(\r\n                function () { enumerator = source.getEnumerator(); },\r\n                function () {\r\n                    while (enumerator.moveNext()) {\r\n                        var result = selector(enumerator.current(), index++);\r\n                        if (result != null) {\r\n                            return this.yieldReturn(result);\r\n                        }\r\n                    }\r\n                    return this.yieldBreak();\r\n                },\r\n                function () { Utils.dispose(enumerator); });\r\n        });\r\n    };\r\n\r\n    Enumerable.prototype.ofType = function (type) {\r\n        var typeName;\r\n        switch (type) {\r\n            case Number:\r\n                typeName = Types.Number;\r\n                break;\r\n            case String:\r\n                typeName = Types.String;\r\n                break;\r\n            case Boolean:\r\n                typeName = Types.Boolean;\r\n                break;\r\n            case Function:\r\n                typeName = Types.Function;\r\n                break;\r\n            default:\r\n                typeName = null;\r\n                break;\r\n        }\r\n        return (typeName === null)\r\n            ? this.where(function (x) { return x instanceof type; })\r\n            : this.where(function (x) { return typeof x === typeName; });\r\n    };\r\n\r\n    // mutiple arguments, last one is selector, others are enumerable\r\n    Enumerable.prototype.zip = function () {\r\n        var args = arguments;\r\n        var selector = Utils.createLambda(arguments[arguments.length - 1]);\r\n\r\n        var source = this;\r\n        // optimized case:argument is 2\r\n        if (arguments.length == 2) {\r\n            var second = arguments[0];\r\n\r\n            return new Enumerable(function () {\r\n                var firstEnumerator;\r\n                var secondEnumerator;\r\n                var index = 0;\r\n\r\n                return new IEnumerator(\r\n                function () {\r\n                    firstEnumerator = source.getEnumerator();\r\n                    secondEnumerator = Enumerable.from(second).getEnumerator();\r\n                },\r\n                function () {\r\n                    if (firstEnumerator.moveNext() && secondEnumerator.moveNext()) {\r\n                        return this.yieldReturn(selector(firstEnumerator.current(), secondEnumerator.current(), index++));\r\n                    }\r\n                    return false;\r\n                },\r\n                function () {\r\n                    try {\r\n                        Utils.dispose(firstEnumerator);\r\n                    } finally {\r\n                        Utils.dispose(secondEnumerator);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n        else {\r\n            return new Enumerable(function () {\r\n                var enumerators;\r\n                var index = 0;\r\n\r\n                return new IEnumerator(\r\n                function () {\r\n                    var array = Enumerable.make(source)\r\n                        .concat(Enumerable.from(args).takeExceptLast().select(Enumerable.from))\r\n                        .select(function (x) { return x.getEnumerator() })\r\n                        .toArray();\r\n                    enumerators = Enumerable.from(array);\r\n                },\r\n                function () {\r\n                    if (enumerators.all(function (x) { return x.moveNext() })) {\r\n                        var array = enumerators\r\n                            .select(function (x) { return x.current() })\r\n                            .toArray();\r\n                        array.push(index++);\r\n                        return this.yieldReturn(selector.apply(null, array));\r\n                    }\r\n                    else {\r\n                        return this.yieldBreak();\r\n                    }\r\n                },\r\n                function () {\r\n                    Enumerable.from(enumerators).forEach(Utils.dispose);\r\n                });\r\n            });\r\n        }\r\n    };\r\n\r\n    // mutiple arguments\r\n    Enumerable.prototype.merge = function () {\r\n        var args = arguments;\r\n        var source = this;\r\n\r\n        return new Enumerable(function () {\r\n            var enumerators;\r\n            var index = -1;\r\n\r\n            return new IEnumerator(\r\n                function () {\r\n                    enumerators = Enumerable.make(source)\r\n                        .concat(Enumerable.from(args).select(Enumerable.from))\r\n                        .select(function (x) { return x.getEnumerator() })\r\n                        .toArray();\r\n                },\r\n                function () {\r\n                    while (enumerators.length > 0) {\r\n                        index = (index >= enumerators.length - 1) ? 0 : index + 1;\r\n                        var enumerator = enumerators[index];\r\n\r\n                        if (enumerator.moveNext()) {\r\n                            return this.yieldReturn(enumerator.current());\r\n                        }\r\n                        else {\r\n                            enumerator.dispose();\r\n                            enumerators.splice(index--, 1);\r\n                        }\r\n                    }\r\n                    return this.yieldBreak();\r\n                },\r\n                function () {\r\n                    Enumerable.from(enumerators).forEach(Utils.dispose);\r\n                });\r\n        });\r\n    };\r\n\r\n    /* Join Methods */\r\n\r\n    // Overload:function (inner, outerKeySelector, innerKeySelector, resultSelector)\r\n    // Overload:function (inner, outerKeySelector, innerKeySelector, resultSelector, compareSelector)\r\n    Enumerable.prototype.join = function (inner, outerKeySelector, innerKeySelector, resultSelector, compareSelector) {\r\n        outerKeySelector = Utils.createLambda(outerKeySelector);\r\n        innerKeySelector = Utils.createLambda(innerKeySelector);\r\n        resultSelector = Utils.createLambda(resultSelector);\r\n        compareSelector = Utils.createLambda(compareSelector);\r\n        var source = this;\r\n\r\n        return new Enumerable(function () {\r\n            var outerEnumerator;\r\n            var lookup;\r\n            var innerElements = null;\r\n            var innerCount = 0;\r\n\r\n            return new IEnumerator(\r\n                function () {\r\n                    outerEnumerator = source.getEnumerator();\r\n                    lookup = Enumerable.from(inner).toLookup(innerKeySelector, Functions.Identity, compareSelector);\r\n                },\r\n                function () {\r\n                    while (true) {\r\n                        if (innerElements != null) {\r\n                            var innerElement = innerElements[innerCount++];\r\n                            if (innerElement !== undefined) {\r\n                                return this.yieldReturn(resultSelector(outerEnumerator.current(), innerElement));\r\n                            }\r\n\r\n                            innerElement = null;\r\n                            innerCount = 0;\r\n                        }\r\n\r\n                        if (outerEnumerator.moveNext()) {\r\n                            var key = outerKeySelector(outerEnumerator.current());\r\n                            innerElements = lookup.get(key).toArray();\r\n                        } else {\r\n                            return false;\r\n                        }\r\n                    }\r\n                },\r\n                function () { Utils.dispose(outerEnumerator); });\r\n        });\r\n    };\r\n\r\n    // Overload:function (inner, outerKeySelector, innerKeySelector, resultSelector)\r\n    // Overload:function (inner, outerKeySelector, innerKeySelector, resultSelector, compareSelector)\r\n    Enumerable.prototype.groupJoin = function (inner, outerKeySelector, innerKeySelector, resultSelector, compareSelector) {\r\n        outerKeySelector = Utils.createLambda(outerKeySelector);\r\n        innerKeySelector = Utils.createLambda(innerKeySelector);\r\n        resultSelector = Utils.createLambda(resultSelector);\r\n        compareSelector = Utils.createLambda(compareSelector);\r\n        var source = this;\r\n\r\n        return new Enumerable(function () {\r\n            var enumerator = source.getEnumerator();\r\n            var lookup = null;\r\n\r\n            return new IEnumerator(\r\n                function () {\r\n                    enumerator = source.getEnumerator();\r\n                    lookup = Enumerable.from(inner).toLookup(innerKeySelector, Functions.Identity, compareSelector);\r\n                },\r\n                function () {\r\n                    if (enumerator.moveNext()) {\r\n                        var innerElement = lookup.get(outerKeySelector(enumerator.current()));\r\n                        return this.yieldReturn(resultSelector(enumerator.current(), innerElement));\r\n                    }\r\n                    return false;\r\n                },\r\n                function () { Utils.dispose(enumerator); });\r\n        });\r\n    };\r\n\r\n    /* Set Methods */\r\n\r\n    Enumerable.prototype.all = function (predicate) {\r\n        predicate = Utils.createLambda(predicate);\r\n\r\n        var result = true;\r\n        this.forEach(function (x) {\r\n            if (!predicate(x)) {\r\n                result = false;\r\n                return false; // break\r\n            }\r\n        });\r\n        return result;\r\n    };\r\n\r\n    // Overload:function()\r\n    // Overload:function(predicate)\r\n    Enumerable.prototype.any = function (predicate) {\r\n        predicate = Utils.createLambda(predicate);\r\n\r\n        var enumerator = this.getEnumerator();\r\n        try {\r\n            if (arguments.length == 0) return enumerator.moveNext(); // case:function()\r\n\r\n            while (enumerator.moveNext()) // case:function(predicate)\r\n            {\r\n                if (predicate(enumerator.current())) return true;\r\n            }\r\n            return false;\r\n        }\r\n        finally {\r\n            Utils.dispose(enumerator);\r\n        }\r\n    };\r\n\r\n    Enumerable.prototype.isEmpty = function () {\r\n        return !this.any();\r\n    };\r\n\r\n    // multiple arguments\r\n    Enumerable.prototype.concat = function () {\r\n        var source = this;\r\n\r\n        if (arguments.length == 1) {\r\n            var second = arguments[0];\r\n\r\n            return new Enumerable(function () {\r\n                var firstEnumerator;\r\n                var secondEnumerator;\r\n\r\n                return new IEnumerator(\r\n                function () { firstEnumerator = source.getEnumerator(); },\r\n                function () {\r\n                    if (secondEnumerator == null) {\r\n                        if (firstEnumerator.moveNext()) return this.yieldReturn(firstEnumerator.current());\r\n                        secondEnumerator = Enumerable.from(second).getEnumerator();\r\n                    }\r\n                    if (secondEnumerator.moveNext()) return this.yieldReturn(secondEnumerator.current());\r\n                    return false;\r\n                },\r\n                function () {\r\n                    try {\r\n                        Utils.dispose(firstEnumerator);\r\n                    }\r\n                    finally {\r\n                        Utils.dispose(secondEnumerator);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n        else {\r\n            var args = arguments;\r\n\r\n            return new Enumerable(function () {\r\n                var enumerators;\r\n\r\n                return new IEnumerator(\r\n                    function () {\r\n                        enumerators = Enumerable.make(source)\r\n                            .concat(Enumerable.from(args).select(Enumerable.from))\r\n                            .select(function (x) { return x.getEnumerator() })\r\n                            .toArray();\r\n                    },\r\n                    function () {\r\n                        while (enumerators.length > 0) {\r\n                            var enumerator = enumerators[0];\r\n\r\n                            if (enumerator.moveNext()) {\r\n                                return this.yieldReturn(enumerator.current());\r\n                            }\r\n                            else {\r\n                                enumerator.dispose();\r\n                                enumerators.splice(0, 1);\r\n                            }\r\n                        }\r\n                        return this.yieldBreak();\r\n                    },\r\n                    function () {\r\n                        Enumerable.from(enumerators).forEach(Utils.dispose);\r\n                    });\r\n            });\r\n        }\r\n    };\r\n\r\n    Enumerable.prototype.insert = function (index, second) {\r\n        var source = this;\r\n\r\n        return new Enumerable(function () {\r\n            var firstEnumerator;\r\n            var secondEnumerator;\r\n            var count = 0;\r\n            var isEnumerated = false;\r\n\r\n            return new IEnumerator(\r\n                function () {\r\n                    firstEnumerator = source.getEnumerator();\r\n                    secondEnumerator = Enumerable.from(second).getEnumerator();\r\n                },\r\n                function () {\r\n                    if (count == index && secondEnumerator.moveNext()) {\r\n                        isEnumerated = true;\r\n                        return this.yieldReturn(secondEnumerator.current());\r\n                    }\r\n                    if (firstEnumerator.moveNext()) {\r\n                        count++;\r\n                        return this.yieldReturn(firstEnumerator.current());\r\n                    }\r\n                    if (!isEnumerated && secondEnumerator.moveNext()) {\r\n                        return this.yieldReturn(secondEnumerator.current());\r\n                    }\r\n                    return false;\r\n                },\r\n                function () {\r\n                    try {\r\n                        Utils.dispose(firstEnumerator);\r\n                    }\r\n                    finally {\r\n                        Utils.dispose(secondEnumerator);\r\n                    }\r\n                });\r\n        });\r\n    };\r\n\r\n    Enumerable.prototype.alternate = function (alternateValueOrSequence) {\r\n        var source = this;\r\n\r\n        return new Enumerable(function () {\r\n            var buffer;\r\n            var enumerator;\r\n            var alternateSequence;\r\n            var alternateEnumerator;\r\n\r\n            return new IEnumerator(\r\n                function () {\r\n                    if (alternateValueOrSequence instanceof Array || alternateValueOrSequence.getEnumerator != null) {\r\n                        alternateSequence = Enumerable.from(Enumerable.from(alternateValueOrSequence).toArray()); // freeze\r\n                    }\r\n                    else {\r\n                        alternateSequence = Enumerable.make(alternateValueOrSequence);\r\n                    }\r\n                    enumerator = source.getEnumerator();\r\n                    if (enumerator.moveNext()) buffer = enumerator.current();\r\n                },\r\n                function () {\r\n                    while (true) {\r\n                        if (alternateEnumerator != null) {\r\n                            if (alternateEnumerator.moveNext()) {\r\n                                return this.yieldReturn(alternateEnumerator.current());\r\n                            }\r\n                            else {\r\n                                alternateEnumerator = null;\r\n                            }\r\n                        }\r\n\r\n                        if (buffer == null && enumerator.moveNext()) {\r\n                            buffer = enumerator.current(); // hasNext\r\n                            alternateEnumerator = alternateSequence.getEnumerator();\r\n                            continue; // GOTO\r\n                        }\r\n                        else if (buffer != null) {\r\n                            var retVal = buffer;\r\n                            buffer = null;\r\n                            return this.yieldReturn(retVal);\r\n                        }\r\n\r\n                        return this.yieldBreak();\r\n                    }\r\n                },\r\n                function () {\r\n                    try {\r\n                        Utils.dispose(enumerator);\r\n                    }\r\n                    finally {\r\n                        Utils.dispose(alternateEnumerator);\r\n                    }\r\n                });\r\n        });\r\n    };\r\n\r\n    // Overload:function(value)\r\n    // Overload:function(value, compareSelector)\r\n    Enumerable.prototype.contains = function (value, compareSelector) {\r\n        compareSelector = Utils.createLambda(compareSelector);\r\n        var enumerator = this.getEnumerator();\r\n        try {\r\n            while (enumerator.moveNext()) {\r\n                if (compareSelector(enumerator.current()) === value) return true;\r\n            }\r\n            return false;\r\n        }\r\n        finally {\r\n            Utils.dispose(enumerator);\r\n        }\r\n    };\r\n\r\n    Enumerable.prototype.defaultIfEmpty = function (defaultValue) {\r\n        var source = this;\r\n        if (defaultValue === undefined) defaultValue = null;\r\n\r\n        return new Enumerable(function () {\r\n            var enumerator;\r\n            var isFirst = true;\r\n\r\n            return new IEnumerator(\r\n                function () { enumerator = source.getEnumerator(); },\r\n                function () {\r\n                    if (enumerator.moveNext()) {\r\n                        isFirst = false;\r\n                        return this.yieldReturn(enumerator.current());\r\n                    }\r\n                    else if (isFirst) {\r\n                        isFirst = false;\r\n                        return this.yieldReturn(defaultValue);\r\n                    }\r\n                    return false;\r\n                },\r\n                function () { Utils.dispose(enumerator); });\r\n        });\r\n    };\r\n\r\n    // Overload:function()\r\n    // Overload:function(compareSelector)\r\n    Enumerable.prototype.distinct = function (compareSelector) {\r\n        return this.except(Enumerable.empty(), compareSelector);\r\n    };\r\n\r\n    Enumerable.prototype.distinctUntilChanged = function (compareSelector) {\r\n        compareSelector = Utils.createLambda(compareSelector);\r\n        var source = this;\r\n\r\n        return new Enumerable(function () {\r\n            var enumerator;\r\n            var compareKey;\r\n            var initial;\r\n\r\n            return new IEnumerator(\r\n                function () {\r\n                    enumerator = source.getEnumerator();\r\n                },\r\n                function () {\r\n                    while (enumerator.moveNext()) {\r\n                        var key = compareSelector(enumerator.current());\r\n\r\n                        if (initial) {\r\n                            initial = false;\r\n                            compareKey = key;\r\n                            return this.yieldReturn(enumerator.current());\r\n                        }\r\n\r\n                        if (compareKey === key) {\r\n                            continue;\r\n                        }\r\n\r\n                        compareKey = key;\r\n                        return this.yieldReturn(enumerator.current());\r\n                    }\r\n                    return this.yieldBreak();\r\n                },\r\n                function () { Utils.dispose(enumerator); });\r\n        });\r\n    };\r\n\r\n    // Overload:function(second)\r\n    // Overload:function(second, compareSelector)\r\n    Enumerable.prototype.except = function (second, compareSelector) {\r\n        compareSelector = Utils.createLambda(compareSelector);\r\n        var source = this;\r\n\r\n        return new Enumerable(function () {\r\n            var enumerator;\r\n            var keys;\r\n\r\n            return new IEnumerator(\r\n                function () {\r\n                    enumerator = source.getEnumerator();\r\n                    keys = new Dictionary(compareSelector);\r\n                    Enumerable.from(second).forEach(function (key) { keys.add(key); });\r\n                },\r\n                function () {\r\n                    while (enumerator.moveNext()) {\r\n                        var current = enumerator.current();\r\n                        if (!keys.contains(current)) {\r\n                            keys.add(current);\r\n                            return this.yieldReturn(current);\r\n                        }\r\n                    }\r\n                    return false;\r\n                },\r\n                function () { Utils.dispose(enumerator); });\r\n        });\r\n    };\r\n\r\n    // Overload:function(second)\r\n    // Overload:function(second, compareSelector)\r\n    Enumerable.prototype.intersect = function (second, compareSelector) {\r\n        compareSelector = Utils.createLambda(compareSelector);\r\n        var source = this;\r\n\r\n        return new Enumerable(function () {\r\n            var enumerator;\r\n            var keys;\r\n            var outs;\r\n\r\n            return new IEnumerator(\r\n                function () {\r\n                    enumerator = source.getEnumerator();\r\n\r\n                    keys = new Dictionary(compareSelector);\r\n                    Enumerable.from(second).forEach(function (key) { keys.add(key); });\r\n                    outs = new Dictionary(compareSelector);\r\n                },\r\n                function () {\r\n                    while (enumerator.moveNext()) {\r\n                        var current = enumerator.current();\r\n                        if (!outs.contains(current) && keys.contains(current)) {\r\n                            outs.add(current);\r\n                            return this.yieldReturn(current);\r\n                        }\r\n                    }\r\n                    return false;\r\n                },\r\n                function () { Utils.dispose(enumerator); });\r\n        });\r\n    };\r\n\r\n    // Overload:function(second)\r\n    // Overload:function(second, compareSelector)\r\n    Enumerable.prototype.sequenceEqual = function (second, compareSelector) {\r\n        compareSelector = Utils.createLambda(compareSelector);\r\n\r\n        var firstEnumerator = this.getEnumerator();\r\n        try {\r\n            var secondEnumerator = Enumerable.from(second).getEnumerator();\r\n            try {\r\n                while (firstEnumerator.moveNext()) {\r\n                    if (!secondEnumerator.moveNext()\r\n                    || compareSelector(firstEnumerator.current()) !== compareSelector(secondEnumerator.current())) {\r\n                        return false;\r\n                    }\r\n                }\r\n\r\n                if (secondEnumerator.moveNext()) return false;\r\n                return true;\r\n            }\r\n            finally {\r\n                Utils.dispose(secondEnumerator);\r\n            }\r\n        }\r\n        finally {\r\n            Utils.dispose(firstEnumerator);\r\n        }\r\n    };\r\n\r\n    Enumerable.prototype.union = function (second, compareSelector) {\r\n        compareSelector = Utils.createLambda(compareSelector);\r\n        var source = this;\r\n\r\n        return new Enumerable(function () {\r\n            var firstEnumerator;\r\n            var secondEnumerator;\r\n            var keys;\r\n\r\n            return new IEnumerator(\r\n                function () {\r\n                    firstEnumerator = source.getEnumerator();\r\n                    keys = new Dictionary(compareSelector);\r\n                },\r\n                function () {\r\n                    var current;\r\n                    if (secondEnumerator === undefined) {\r\n                        while (firstEnumerator.moveNext()) {\r\n                            current = firstEnumerator.current();\r\n                            if (!keys.contains(current)) {\r\n                                keys.add(current);\r\n                                return this.yieldReturn(current);\r\n                            }\r\n                        }\r\n                        secondEnumerator = Enumerable.from(second).getEnumerator();\r\n                    }\r\n                    while (secondEnumerator.moveNext()) {\r\n                        current = secondEnumerator.current();\r\n                        if (!keys.contains(current)) {\r\n                            keys.add(current);\r\n                            return this.yieldReturn(current);\r\n                        }\r\n                    }\r\n                    return false;\r\n                },\r\n                function () {\r\n                    try {\r\n                        Utils.dispose(firstEnumerator);\r\n                    }\r\n                    finally {\r\n                        Utils.dispose(secondEnumerator);\r\n                    }\r\n                });\r\n        });\r\n    };\r\n\r\n    /* Ordering Methods */\r\n\r\n    Enumerable.prototype.orderBy = function (keySelector, comparer) {\r\n        return new OrderedEnumerable(this, keySelector, comparer, false);\r\n    };\r\n\r\n    Enumerable.prototype.orderByDescending = function (keySelector, comparer) {\r\n        return new OrderedEnumerable(this, keySelector, comparer, true);\r\n    };\r\n\r\n    Enumerable.prototype.reverse = function () {\r\n        var source = this;\r\n\r\n        return new Enumerable(function () {\r\n            var buffer;\r\n            var index;\r\n\r\n            return new IEnumerator(\r\n                function () {\r\n                    buffer = source.toArray();\r\n                    index = buffer.length;\r\n                },\r\n                function () {\r\n                    return (index > 0)\r\n                        ? this.yieldReturn(buffer[--index])\r\n                        : false;\r\n                },\r\n                Functions.Blank);\r\n        });\r\n    };\r\n\r\n    Enumerable.prototype.shuffle = function () {\r\n        var source = this;\r\n\r\n        return new Enumerable(function () {\r\n            var buffer;\r\n\r\n            return new IEnumerator(\r\n                function () { buffer = source.toArray(); },\r\n                function () {\r\n                    if (buffer.length > 0) {\r\n                        var i = Math.floor(Math.random() * buffer.length);\r\n                        return this.yieldReturn(buffer.splice(i, 1)[0]);\r\n                    }\r\n                    return false;\r\n                },\r\n                Functions.Blank);\r\n        });\r\n    };\r\n\r\n    Enumerable.prototype.weightedSample = function (weightSelector) {\r\n        weightSelector = Utils.createLambda(weightSelector);\r\n        var source = this;\r\n\r\n        return new Enumerable(function () {\r\n            var sortedByBound;\r\n            var totalWeight = 0;\r\n\r\n            return new IEnumerator(\r\n                function () {\r\n                    sortedByBound = source\r\n                        .choose(function (x) {\r\n                            var weight = weightSelector(x);\r\n                            if (weight <= 0) return null; // ignore 0\r\n\r\n                            totalWeight += weight;\r\n                            return { value: x, bound: totalWeight };\r\n                        })\r\n                        .toArray();\r\n                },\r\n                function () {\r\n                    if (sortedByBound.length > 0) {\r\n                        var draw = Math.floor(Math.random() * totalWeight) + 1;\r\n\r\n                        var lower = -1;\r\n                        var upper = sortedByBound.length;\r\n                        while (upper - lower > 1) {\r\n                            var index = Math.floor((lower + upper) / 2);\r\n                            if (sortedByBound[index].bound >= draw) {\r\n                                upper = index;\r\n                            }\r\n                            else {\r\n                                lower = index;\r\n                            }\r\n                        }\r\n\r\n                        return this.yieldReturn(sortedByBound[upper].value);\r\n                    }\r\n\r\n                    return this.yieldBreak();\r\n                },\r\n                Functions.Blank);\r\n        });\r\n    };\r\n\r\n    /* Grouping Methods */\r\n\r\n    // Overload:function(keySelector)\r\n    // Overload:function(keySelector,elementSelector)\r\n    // Overload:function(keySelector,elementSelector,resultSelector)\r\n    // Overload:function(keySelector,elementSelector,resultSelector,compareSelector)\r\n    Enumerable.prototype.groupBy = function (keySelector, elementSelector, resultSelector, compareSelector) {\r\n        var source = this;\r\n        keySelector = Utils.createLambda(keySelector);\r\n        elementSelector = Utils.createLambda(elementSelector);\r\n        if (resultSelector != null) resultSelector = Utils.createLambda(resultSelector);\r\n        compareSelector = Utils.createLambda(compareSelector);\r\n\r\n        return new Enumerable(function () {\r\n            var enumerator;\r\n\r\n            return new IEnumerator(\r\n                function () {\r\n                    enumerator = source.toLookup(keySelector, elementSelector, compareSelector)\r\n                        .toEnumerable()\r\n                        .getEnumerator();\r\n                },\r\n                function () {\r\n                    while (enumerator.moveNext()) {\r\n                        return (resultSelector == null)\r\n                            ? this.yieldReturn(enumerator.current())\r\n                            : this.yieldReturn(resultSelector(enumerator.current().key(), enumerator.current()));\r\n                    }\r\n                    return false;\r\n                },\r\n                function () { Utils.dispose(enumerator); });\r\n        });\r\n    };\r\n\r\n    // Overload:function(keySelector)\r\n    // Overload:function(keySelector,elementSelector)\r\n    // Overload:function(keySelector,elementSelector,resultSelector)\r\n    // Overload:function(keySelector,elementSelector,resultSelector,compareSelector)\r\n    Enumerable.prototype.partitionBy = function (keySelector, elementSelector, resultSelector, compareSelector) {\r\n\r\n        var source = this;\r\n        keySelector = Utils.createLambda(keySelector);\r\n        elementSelector = Utils.createLambda(elementSelector);\r\n        compareSelector = Utils.createLambda(compareSelector);\r\n        var hasResultSelector;\r\n        if (resultSelector == null) {\r\n            hasResultSelector = false;\r\n            resultSelector = function (key, group) { return new Grouping(key, group); };\r\n        }\r\n        else {\r\n            hasResultSelector = true;\r\n            resultSelector = Utils.createLambda(resultSelector);\r\n        }\r\n\r\n        return new Enumerable(function () {\r\n            var enumerator;\r\n            var key;\r\n            var compareKey;\r\n            var group = [];\r\n\r\n            return new IEnumerator(\r\n                function () {\r\n                    enumerator = source.getEnumerator();\r\n                    if (enumerator.moveNext()) {\r\n                        key = keySelector(enumerator.current());\r\n                        compareKey = compareSelector(key);\r\n                        group.push(elementSelector(enumerator.current()));\r\n                    }\r\n                },\r\n                function () {\r\n                    var hasNext;\r\n                    while ((hasNext = enumerator.moveNext()) == true) {\r\n                        if (compareKey === compareSelector(keySelector(enumerator.current()))) {\r\n                            group.push(elementSelector(enumerator.current()));\r\n                        }\r\n                        else break;\r\n                    }\r\n\r\n                    if (group.length > 0) {\r\n                        var result = (hasResultSelector)\r\n                            ? resultSelector(key, Enumerable.from(group))\r\n                            : resultSelector(key, group);\r\n                        if (hasNext) {\r\n                            key = keySelector(enumerator.current());\r\n                            compareKey = compareSelector(key);\r\n                            group = [elementSelector(enumerator.current())];\r\n                        }\r\n                        else group = [];\r\n\r\n                        return this.yieldReturn(result);\r\n                    }\r\n\r\n                    return false;\r\n                },\r\n                function () { Utils.dispose(enumerator); });\r\n        });\r\n    };\r\n\r\n    Enumerable.prototype.buffer = function (count) {\r\n        var source = this;\r\n\r\n        return new Enumerable(function () {\r\n            var enumerator;\r\n\r\n            return new IEnumerator(\r\n                function () { enumerator = source.getEnumerator(); },\r\n                function () {\r\n                    var array = [];\r\n                    var index = 0;\r\n                    while (enumerator.moveNext()) {\r\n                        array.push(enumerator.current());\r\n                        if (++index >= count) return this.yieldReturn(array);\r\n                    }\r\n                    if (array.length > 0) return this.yieldReturn(array);\r\n                    return false;\r\n                },\r\n                function () { Utils.dispose(enumerator); });\r\n        });\r\n    };\r\n\r\n    /* Aggregate Methods */\r\n\r\n    // Overload:function(func)\r\n    // Overload:function(seed,func)\r\n    // Overload:function(seed,func,resultSelector)\r\n    Enumerable.prototype.aggregate = function (seed, func, resultSelector) {\r\n        resultSelector = Utils.createLambda(resultSelector);\r\n        return resultSelector(this.scan(seed, func, resultSelector).last());\r\n    };\r\n\r\n    // Overload:function()\r\n    // Overload:function(selector)\r\n    Enumerable.prototype.average = function (selector) {\r\n        selector = Utils.createLambda(selector);\r\n\r\n        var sum = 0;\r\n        var count = 0;\r\n        this.forEach(function (x) {\r\n            sum += selector(x);\r\n            ++count;\r\n        });\r\n\r\n        return sum / count;\r\n    };\r\n\r\n    // Overload:function()\r\n    // Overload:function(predicate)\r\n    Enumerable.prototype.count = function (predicate) {\r\n        predicate = (predicate == null) ? Functions.True : Utils.createLambda(predicate);\r\n\r\n        var count = 0;\r\n        this.forEach(function (x, i) {\r\n            if (predicate(x, i))++count;\r\n        });\r\n        return count;\r\n    };\r\n\r\n    // Overload:function()\r\n    // Overload:function(selector)\r\n    Enumerable.prototype.max = function (selector) {\r\n        if (selector == null) selector = Functions.Identity;\r\n        return this.select(selector).aggregate(function (a, b) { return (a > b) ? a : b; });\r\n    };\r\n\r\n    // Overload:function()\r\n    // Overload:function(selector)\r\n    Enumerable.prototype.min = function (selector) {\r\n        if (selector == null) selector = Functions.Identity;\r\n        return this.select(selector).aggregate(function (a, b) { return (a < b) ? a : b; });\r\n    };\r\n\r\n    Enumerable.prototype.maxBy = function (keySelector) {\r\n        keySelector = Utils.createLambda(keySelector);\r\n        return this.aggregate(function (a, b) { return (keySelector(a) > keySelector(b)) ? a : b; });\r\n    };\r\n\r\n    Enumerable.prototype.minBy = function (keySelector) {\r\n        keySelector = Utils.createLambda(keySelector);\r\n        return this.aggregate(function (a, b) { return (keySelector(a) < keySelector(b)) ? a : b; });\r\n    };\r\n\r\n    // Overload:function()\r\n    // Overload:function(selector)\r\n    Enumerable.prototype.sum = function (selector) {\r\n        if (selector == null) selector = Functions.Identity;\r\n        return this.select(selector).aggregate(0, function (a, b) { return a + b; });\r\n    };\r\n\r\n    /* Paging Methods */\r\n\r\n    Enumerable.prototype.elementAt = function (index) {\r\n        var value;\r\n        var found = false;\r\n        this.forEach(function (x, i) {\r\n            if (i == index) {\r\n                value = x;\r\n                found = true;\r\n                return false;\r\n            }\r\n        });\r\n\r\n        if (!found) throw new Error(\"index is less than 0 or greater than or equal to the number of elements in source.\");\r\n        return value;\r\n    };\r\n\r\n    Enumerable.prototype.elementAtOrDefault = function (index, defaultValue) {\r\n        if (defaultValue === undefined) defaultValue = null;\r\n        var value;\r\n        var found = false;\r\n        this.forEach(function (x, i) {\r\n            if (i == index) {\r\n                value = x;\r\n                found = true;\r\n                return false;\r\n            }\r\n        });\r\n\r\n        return (!found) ? defaultValue : value;\r\n    };\r\n\r\n    // Overload:function()\r\n    // Overload:function(predicate)\r\n    Enumerable.prototype.first = function (predicate) {\r\n        if (predicate != null) return this.where(predicate).first();\r\n\r\n        var value;\r\n        var found = false;\r\n        this.forEach(function (x) {\r\n            value = x;\r\n            found = true;\r\n            return false;\r\n        });\r\n\r\n        if (!found) throw new Error(\"first:No element satisfies the condition.\");\r\n        return value;\r\n    };\r\n\r\n    Enumerable.prototype.firstOrDefault = function (predicate, defaultValue) {\r\n        if (predicate !== undefined) {\r\n            if (typeof predicate === Types.Function || typeof Utils.createLambda(predicate) === Types.Function) {\r\n                return this.where(predicate).firstOrDefault(undefined, defaultValue);\r\n            }\r\n            defaultValue = predicate;\r\n        }\r\n\r\n        var value;\r\n        var found = false;\r\n        this.forEach(function (x) {\r\n            value = x;\r\n            found = true;\r\n            return false;\r\n        });\r\n        return (!found) ? defaultValue : value;\r\n    };\r\n\r\n    // Overload:function()\r\n    // Overload:function(predicate)\r\n    Enumerable.prototype.last = function (predicate) {\r\n        if (predicate != null) return this.where(predicate).last();\r\n\r\n        var value;\r\n        var found = false;\r\n        this.forEach(function (x) {\r\n            found = true;\r\n            value = x;\r\n        });\r\n\r\n        if (!found) throw new Error(\"last:No element satisfies the condition.\");\r\n        return value;\r\n    };\r\n\r\n    Enumerable.prototype.lastOrDefault = function (predicate, defaultValue) {\r\n        if (predicate !== undefined) {\r\n            if (typeof predicate === Types.Function || typeof Utils.createLambda(predicate) === Types.Function) {\r\n                return this.where(predicate).lastOrDefault(undefined, defaultValue);\r\n            }\r\n            defaultValue = predicate;\r\n        }\r\n\r\n        var value;\r\n        var found = false;\r\n        this.forEach(function (x) {\r\n            found = true;\r\n            value = x;\r\n        });\r\n        return (!found) ? defaultValue : value;\r\n    };\r\n\r\n    // Overload:function()\r\n    // Overload:function(predicate)\r\n    Enumerable.prototype.single = function (predicate) {\r\n        if (predicate != null) return this.where(predicate).single();\r\n\r\n        var value;\r\n        var found = false;\r\n        this.forEach(function (x) {\r\n            if (!found) {\r\n                found = true;\r\n                value = x;\r\n            } else throw new Error(\"single:sequence contains more than one element.\");\r\n        });\r\n\r\n        if (!found) throw new Error(\"single:No element satisfies the condition.\");\r\n        return value;\r\n    };\r\n\r\n    // Overload:function(defaultValue)\r\n    // Overload:function(defaultValue,predicate)\r\n    Enumerable.prototype.singleOrDefault = function (predicate, defaultValue) {\r\n        if (defaultValue === undefined) defaultValue = null;\r\n        if (predicate != null) return this.where(predicate).singleOrDefault(null, defaultValue);\r\n\r\n        var value;\r\n        var found = false;\r\n        this.forEach(function (x) {\r\n            if (!found) {\r\n                found = true;\r\n                value = x;\r\n            } else throw new Error(\"single:sequence contains more than one element.\");\r\n        });\r\n\r\n        return (!found) ? defaultValue : value;\r\n    };\r\n\r\n    Enumerable.prototype.skip = function (count) {\r\n        var source = this;\r\n\r\n        return new Enumerable(function () {\r\n            var enumerator;\r\n            var index = 0;\r\n\r\n            return new IEnumerator(\r\n                function () {\r\n                    enumerator = source.getEnumerator();\r\n                    while (index++ < count && enumerator.moveNext()) {\r\n                    }\r\n                    ;\r\n                },\r\n                function () {\r\n                    return (enumerator.moveNext())\r\n                        ? this.yieldReturn(enumerator.current())\r\n                        : false;\r\n                },\r\n                function () { Utils.dispose(enumerator); });\r\n        });\r\n    };\r\n\r\n    // Overload:function(predicate<element>)\r\n    // Overload:function(predicate<element,index>)\r\n    Enumerable.prototype.skipWhile = function (predicate) {\r\n        predicate = Utils.createLambda(predicate);\r\n        var source = this;\r\n\r\n        return new Enumerable(function () {\r\n            var enumerator;\r\n            var index = 0;\r\n            var isSkipEnd = false;\r\n\r\n            return new IEnumerator(\r\n                function () { enumerator = source.getEnumerator(); },\r\n                function () {\r\n                    while (!isSkipEnd) {\r\n                        if (enumerator.moveNext()) {\r\n                            if (!predicate(enumerator.current(), index++)) {\r\n                                isSkipEnd = true;\r\n                                return this.yieldReturn(enumerator.current());\r\n                            }\r\n                            continue;\r\n                        } else return false;\r\n                    }\r\n\r\n                    return (enumerator.moveNext())\r\n                        ? this.yieldReturn(enumerator.current())\r\n                        : false;\r\n\r\n                },\r\n                function () { Utils.dispose(enumerator); });\r\n        });\r\n    };\r\n\r\n    Enumerable.prototype.take = function (count) {\r\n        var source = this;\r\n\r\n        return new Enumerable(function () {\r\n            var enumerator;\r\n            var index = 0;\r\n\r\n            return new IEnumerator(\r\n                function () { enumerator = source.getEnumerator(); },\r\n                function () {\r\n                    return (index++ < count && enumerator.moveNext())\r\n                        ? this.yieldReturn(enumerator.current())\r\n                        : false;\r\n                },\r\n                function () { Utils.dispose(enumerator); }\r\n            );\r\n        });\r\n    };\r\n\r\n    // Overload:function(predicate<element>)\r\n    // Overload:function(predicate<element,index>)\r\n    Enumerable.prototype.takeWhile = function (predicate) {\r\n        predicate = Utils.createLambda(predicate);\r\n        var source = this;\r\n\r\n        return new Enumerable(function () {\r\n            var enumerator;\r\n            var index = 0;\r\n\r\n            return new IEnumerator(\r\n                function () { enumerator = source.getEnumerator(); },\r\n                function () {\r\n                    return (enumerator.moveNext() && predicate(enumerator.current(), index++))\r\n                        ? this.yieldReturn(enumerator.current())\r\n                        : false;\r\n                },\r\n                function () { Utils.dispose(enumerator); });\r\n        });\r\n    };\r\n\r\n    // Overload:function()\r\n    // Overload:function(count)\r\n    Enumerable.prototype.takeExceptLast = function (count) {\r\n        if (count == null) count = 1;\r\n        var source = this;\r\n\r\n        return new Enumerable(function () {\r\n            if (count <= 0) return source.getEnumerator(); // do nothing\r\n\r\n            var enumerator;\r\n            var q = [];\r\n\r\n            return new IEnumerator(\r\n                function () { enumerator = source.getEnumerator(); },\r\n                function () {\r\n                    while (enumerator.moveNext()) {\r\n                        if (q.length == count) {\r\n                            q.push(enumerator.current());\r\n                            return this.yieldReturn(q.shift());\r\n                        }\r\n                        q.push(enumerator.current());\r\n                    }\r\n                    return false;\r\n                },\r\n                function () { Utils.dispose(enumerator); });\r\n        });\r\n    };\r\n\r\n    Enumerable.prototype.takeFromLast = function (count) {\r\n        if (count <= 0 || count == null) return Enumerable.empty();\r\n        var source = this;\r\n\r\n        return new Enumerable(function () {\r\n            var sourceEnumerator;\r\n            var enumerator;\r\n            var q = [];\r\n\r\n            return new IEnumerator(\r\n                function () { sourceEnumerator = source.getEnumerator(); },\r\n                function () {\r\n                    while (sourceEnumerator.moveNext()) {\r\n                        if (q.length == count) q.shift();\r\n                        q.push(sourceEnumerator.current());\r\n                    }\r\n                    if (enumerator == null) {\r\n                        enumerator = Enumerable.from(q).getEnumerator();\r\n                    }\r\n                    return (enumerator.moveNext())\r\n                        ? this.yieldReturn(enumerator.current())\r\n                        : false;\r\n                },\r\n                function () { Utils.dispose(enumerator); });\r\n        });\r\n    };\r\n\r\n    // Overload:function(item)\r\n    // Overload:function(predicate)\r\n    Enumerable.prototype.indexOf = function (item) {\r\n        var found = null;\r\n\r\n        // item as predicate\r\n        if (typeof (item) === Types.Function) {\r\n            this.forEach(function (x, i) {\r\n                if (item(x, i)) {\r\n                    found = i;\r\n                    return false;\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            this.forEach(function (x, i) {\r\n                if (x === item) {\r\n                    found = i;\r\n                    return false;\r\n                }\r\n            });\r\n        }\r\n\r\n        return (found !== null) ? found : -1;\r\n    };\r\n\r\n    // Overload:function(item)\r\n    // Overload:function(predicate)\r\n    Enumerable.prototype.lastIndexOf = function (item) {\r\n        var result = -1;\r\n\r\n        // item as predicate\r\n        if (typeof (item) === Types.Function) {\r\n            this.forEach(function (x, i) {\r\n                if (item(x, i)) result = i;\r\n            });\r\n        }\r\n        else {\r\n            this.forEach(function (x, i) {\r\n                if (x === item) result = i;\r\n            });\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    /* Convert Methods */\r\n\r\n    Enumerable.prototype.cast = function () {\r\n        return this;\r\n    };\r\n\r\n    Enumerable.prototype.asEnumerable = function () {\r\n        return Enumerable.from(this);\r\n    };\r\n\r\n    Enumerable.prototype.toArray = function () {\r\n        var array = [];\r\n        this.forEach(function (x) { array.push(x); });\r\n        return array;\r\n    };\r\n\r\n    // Overload:function(keySelector)\r\n    // Overload:function(keySelector, elementSelector)\r\n    // Overload:function(keySelector, elementSelector, compareSelector)\r\n    Enumerable.prototype.toLookup = function (keySelector, elementSelector, compareSelector) {\r\n        keySelector = Utils.createLambda(keySelector);\r\n        elementSelector = Utils.createLambda(elementSelector);\r\n        compareSelector = Utils.createLambda(compareSelector);\r\n\r\n        var dict = new Dictionary(compareSelector);\r\n        this.forEach(function (x) {\r\n            var key = keySelector(x);\r\n            var element = elementSelector(x);\r\n\r\n            var array = dict.get(key);\r\n            if (array !== undefined) array.push(element);\r\n            else dict.add(key, [element]);\r\n        });\r\n        return new Lookup(dict);\r\n    };\r\n\r\n    Enumerable.prototype.toObject = function (keySelector, elementSelector) {\r\n        keySelector = Utils.createLambda(keySelector);\r\n        elementSelector = Utils.createLambda(elementSelector);\r\n\r\n        var obj = {};\r\n        this.forEach(function (x) {\r\n            obj[keySelector(x)] = elementSelector(x);\r\n        });\r\n        return obj;\r\n    };\r\n\r\n    // Overload:function(keySelector, elementSelector)\r\n    // Overload:function(keySelector, elementSelector, compareSelector)\r\n    Enumerable.prototype.toDictionary = function (keySelector, elementSelector, compareSelector) {\r\n        keySelector = Utils.createLambda(keySelector);\r\n        elementSelector = Utils.createLambda(elementSelector);\r\n        compareSelector = Utils.createLambda(compareSelector);\r\n\r\n        var dict = new Dictionary(compareSelector);\r\n        this.forEach(function (x) {\r\n            dict.add(keySelector(x), elementSelector(x));\r\n        });\r\n        return dict;\r\n    };\r\n\r\n    // Overload:function()\r\n    // Overload:function(replacer)\r\n    // Overload:function(replacer, space)\r\n    Enumerable.prototype.toJSONString = function (replacer, space) {\r\n        if (typeof JSON === Types.Undefined || JSON.stringify == null) {\r\n            throw new Error(\"toJSONString can't find JSON.stringify. This works native JSON support Browser or include json2.js\");\r\n        }\r\n        return JSON.stringify(this.toArray(), replacer, space);\r\n    };\r\n\r\n    // Overload:function()\r\n    // Overload:function(separator)\r\n    // Overload:function(separator,selector)\r\n    Enumerable.prototype.toJoinedString = function (separator, selector) {\r\n        if (separator == null) separator = \"\";\r\n        if (selector == null) selector = Functions.Identity;\r\n\r\n        return this.select(selector).toArray().join(separator);\r\n    };\r\n\r\n\r\n    /* Action Methods */\r\n\r\n    // Overload:function(action<element>)\r\n    // Overload:function(action<element,index>)\r\n    Enumerable.prototype.doAction = function (action) {\r\n        var source = this;\r\n        action = Utils.createLambda(action);\r\n\r\n        return new Enumerable(function () {\r\n            var enumerator;\r\n            var index = 0;\r\n\r\n            return new IEnumerator(\r\n                function () { enumerator = source.getEnumerator(); },\r\n                function () {\r\n                    if (enumerator.moveNext()) {\r\n                        action(enumerator.current(), index++);\r\n                        return this.yieldReturn(enumerator.current());\r\n                    }\r\n                    return false;\r\n                },\r\n                function () { Utils.dispose(enumerator); });\r\n        });\r\n    };\r\n\r\n    // Overload:function(action<element>)\r\n    // Overload:function(action<element,index>)\r\n    // Overload:function(func<element,bool>)\r\n    // Overload:function(func<element,index,bool>)\r\n    Enumerable.prototype.forEach = function (action) {\r\n        action = Utils.createLambda(action);\r\n\r\n        var index = 0;\r\n        var enumerator = this.getEnumerator();\r\n        try {\r\n            while (enumerator.moveNext()) {\r\n                if (action(enumerator.current(), index++) === false) break;\r\n            }\r\n        } finally {\r\n            Utils.dispose(enumerator);\r\n        }\r\n    };\r\n\r\n    // Overload:function()\r\n    // Overload:function(separator)\r\n    // Overload:function(separator,selector)\r\n    Enumerable.prototype.write = function (separator, selector) {\r\n        if (separator == null) separator = \"\";\r\n        selector = Utils.createLambda(selector);\r\n\r\n        var isFirst = true;\r\n        this.forEach(function (item) {\r\n            if (isFirst) isFirst = false;\r\n            else document.write(separator);\r\n            document.write(selector(item));\r\n        });\r\n    };\r\n\r\n    // Overload:function()\r\n    // Overload:function(selector)\r\n    Enumerable.prototype.writeLine = function (selector) {\r\n        selector = Utils.createLambda(selector);\r\n\r\n        this.forEach(function (item) {\r\n            document.writeln(selector(item) + \"<br />\");\r\n        });\r\n    };\r\n\r\n    Enumerable.prototype.force = function () {\r\n        var enumerator = this.getEnumerator();\r\n\r\n        try {\r\n            while (enumerator.moveNext()) {\r\n            }\r\n        }\r\n        finally {\r\n            Utils.dispose(enumerator);\r\n        }\r\n    };\r\n\r\n    /* Functional Methods */\r\n\r\n    Enumerable.prototype.letBind = function (func) {\r\n        func = Utils.createLambda(func);\r\n        var source = this;\r\n\r\n        return new Enumerable(function () {\r\n            var enumerator;\r\n\r\n            return new IEnumerator(\r\n                function () {\r\n                    enumerator = Enumerable.from(func(source)).getEnumerator();\r\n                },\r\n                function () {\r\n                    return (enumerator.moveNext())\r\n                        ? this.yieldReturn(enumerator.current())\r\n                        : false;\r\n                },\r\n                function () { Utils.dispose(enumerator); });\r\n        });\r\n    };\r\n\r\n    Enumerable.prototype.share = function () {\r\n        var source = this;\r\n        var sharedEnumerator;\r\n        var disposed = false;\r\n\r\n        return new DisposableEnumerable(function () {\r\n            return new IEnumerator(\r\n                function () {\r\n                    if (sharedEnumerator == null) {\r\n                        sharedEnumerator = source.getEnumerator();\r\n                    }\r\n                },\r\n                function () {\r\n                    if (disposed) throw new Error(\"enumerator is disposed\");\r\n\r\n                    return (sharedEnumerator.moveNext())\r\n                        ? this.yieldReturn(sharedEnumerator.current())\r\n                        : false;\r\n                },\r\n                Functions.Blank\r\n            );\r\n        }, function () {\r\n            disposed = true;\r\n            Utils.dispose(sharedEnumerator);\r\n        });\r\n    };\r\n\r\n    Enumerable.prototype.memoize = function () {\r\n        var source = this;\r\n        var cache;\r\n        var enumerator;\r\n        var disposed = false;\r\n\r\n        return new DisposableEnumerable(function () {\r\n            var index = -1;\r\n\r\n            return new IEnumerator(\r\n                function () {\r\n                    if (enumerator == null) {\r\n                        enumerator = source.getEnumerator();\r\n                        cache = [];\r\n                    }\r\n                },\r\n                function () {\r\n                    if (disposed) throw new Error(\"enumerator is disposed\");\r\n\r\n                    index++;\r\n                    if (cache.length <= index) {\r\n                        return (enumerator.moveNext())\r\n                            ? this.yieldReturn(cache[index] = enumerator.current())\r\n                            : false;\r\n                    }\r\n\r\n                    return this.yieldReturn(cache[index]);\r\n                },\r\n                Functions.Blank\r\n            );\r\n        }, function () {\r\n            disposed = true;\r\n            Utils.dispose(enumerator);\r\n            cache = null;\r\n        });\r\n    };\r\n\r\n    /* Iterator (ES6 for..of) support */\r\n    if (Utils.hasNativeIteratorSupport()) {\r\n        Enumerable.prototype[Symbol.iterator] = function () {\r\n            return {\r\n                enumerator: this.getEnumerator(),\r\n                next: function () {\r\n                    if (this.enumerator.moveNext()) {\r\n                        return {\r\n                            done: false,\r\n                            value: this.enumerator.current()\r\n                        };\r\n                    } else {\r\n                        return { done: true };\r\n                    }\r\n                }\r\n            };\r\n        };\r\n    }\r\n\r\n    /* Error Handling Methods */\r\n\r\n    Enumerable.prototype.catchError = function (handler) {\r\n        handler = Utils.createLambda(handler);\r\n        var source = this;\r\n\r\n        return new Enumerable(function () {\r\n            var enumerator;\r\n\r\n            return new IEnumerator(\r\n                function () { enumerator = source.getEnumerator(); },\r\n                function () {\r\n                    try {\r\n                        return (enumerator.moveNext())\r\n                            ? this.yieldReturn(enumerator.current())\r\n                            : false;\r\n                    } catch (e) {\r\n                        handler(e);\r\n                        return false;\r\n                    }\r\n                },\r\n                function () { Utils.dispose(enumerator); });\r\n        });\r\n    };\r\n\r\n    Enumerable.prototype.finallyAction = function (finallyAction) {\r\n        finallyAction = Utils.createLambda(finallyAction);\r\n        var source = this;\r\n\r\n        return new Enumerable(function () {\r\n            var enumerator;\r\n\r\n            return new IEnumerator(\r\n                function () { enumerator = source.getEnumerator(); },\r\n                function () {\r\n                    return (enumerator.moveNext())\r\n                        ? this.yieldReturn(enumerator.current())\r\n                        : false;\r\n                },\r\n                function () {\r\n                    try {\r\n                        Utils.dispose(enumerator);\r\n                    } finally {\r\n                        finallyAction();\r\n                    }\r\n                });\r\n        });\r\n    };\r\n\r\n    /* For Debug Methods */\r\n\r\n    // Overload:function()\r\n    // Overload:function(selector)\r\n    Enumerable.prototype.log = function (selector) {\r\n        selector = Utils.createLambda(selector);\r\n\r\n        return this.doAction(function (item) {\r\n            if (typeof console !== Types.Undefined) {\r\n                console.log(selector(item));\r\n            }\r\n        });\r\n    };\r\n\r\n    // Overload:function()\r\n    // Overload:function(message)\r\n    // Overload:function(message,selector)\r\n    Enumerable.prototype.trace = function (message, selector) {\r\n        if (message == null) message = \"Trace\";\r\n        selector = Utils.createLambda(selector);\r\n\r\n        return this.doAction(function (item) {\r\n            if (typeof console !== Types.Undefined) {\r\n                console.log(message, selector(item));\r\n            }\r\n        });\r\n    };\r\n\r\n    // private\r\n\r\n    var OrderedEnumerable = function (source, keySelector, comparer, descending, parent) {\r\n        this.source = source;\r\n        this.keySelector = Utils.createLambda(keySelector);\r\n        this.descending = descending;\r\n        this.parent = parent;\r\n\r\n        if (comparer)\r\n            this.comparer = Utils.createLambda(comparer);\r\n    };\r\n    OrderedEnumerable.prototype = new Enumerable();\r\n\r\n    OrderedEnumerable.prototype.createOrderedEnumerable = function (keySelector, comparer, descending) {\r\n        return new OrderedEnumerable(this.source, keySelector, comparer, descending, this);\r\n    };\r\n\r\n    OrderedEnumerable.prototype.thenBy = function (keySelector, comparer) {\r\n        return this.createOrderedEnumerable(keySelector, comparer, false);\r\n    };\r\n\r\n    OrderedEnumerable.prototype.thenByDescending = function (keySelector, comparer) {\r\n        return this.createOrderedEnumerable(keySelector, comparer, true);\r\n    };\r\n\r\n    OrderedEnumerable.prototype.getEnumerator = function () {\r\n        var self = this;\r\n        var buffer;\r\n        var indexes;\r\n        var index = 0;\r\n\r\n        return new IEnumerator(\r\n            function () {\r\n                buffer = [];\r\n                indexes = [];\r\n                self.source.forEach(function (item, index) {\r\n                    buffer.push(item);\r\n                    indexes.push(index);\r\n                });\r\n                var sortContext = SortContext.create(self, null);\r\n                sortContext.GenerateKeys(buffer);\r\n\r\n                indexes.sort(function (a, b) { return sortContext.compare(a, b); });\r\n            },\r\n            function () {\r\n                return (index < indexes.length)\r\n                    ? this.yieldReturn(buffer[indexes[index++]])\r\n                    : false;\r\n            },\r\n            Functions.Blank\r\n        );\r\n    };\r\n\r\n    var SortContext = function (keySelector, comparer, descending, child) {\r\n        this.keySelector = keySelector;\r\n        this.descending = descending;\r\n        this.child = child;\r\n        this.comparer = comparer;\r\n        this.keys = null;\r\n    };\r\n\r\n    SortContext.create = function (orderedEnumerable, currentContext) {\r\n        var context = new SortContext(\r\n            orderedEnumerable.keySelector, orderedEnumerable.comparer, orderedEnumerable.descending, currentContext\r\n        );\r\n\r\n        if (orderedEnumerable.parent != null) return SortContext.create(orderedEnumerable.parent, context);\r\n        return context;\r\n    };\r\n\r\n    SortContext.prototype.GenerateKeys = function (source) {\r\n        var len = source.length;\r\n        var keySelector = this.keySelector;\r\n        var keys = new Array(len);\r\n        for (var i = 0; i < len; i++) keys[i] = keySelector(source[i]);\r\n        this.keys = keys;\r\n\r\n        if (this.child != null) this.child.GenerateKeys(source);\r\n    };\r\n\r\n    SortContext.prototype.compare = function (index1, index2) {\r\n        var comparison = this.comparer ?\r\n            this.comparer(this.keys[index1], this.keys[index2]) :\r\n            Utils.compare(this.keys[index1], this.keys[index2]);\r\n\r\n        if (comparison == 0) {\r\n            if (this.child != null) return this.child.compare(index1, index2);\r\n            return Utils.compare(index1, index2);\r\n        }\r\n\r\n        return (this.descending) ? -comparison : comparison;\r\n    };\r\n\r\n    var DisposableEnumerable = function (getEnumerator, dispose) {\r\n        this.dispose = dispose;\r\n        Enumerable.call(this, getEnumerator);\r\n    };\r\n    DisposableEnumerable.prototype = new Enumerable();\r\n\r\n    // optimize array or arraylike object\r\n\r\n    var ArrayEnumerable = function (source) {\r\n        this.getSource = function () { return source; };\r\n    };\r\n    ArrayEnumerable.prototype = new Enumerable();\r\n\r\n    ArrayEnumerable.prototype.any = function (predicate) {\r\n        return (predicate == null)\r\n            ? (this.getSource().length > 0)\r\n            : Enumerable.prototype.any.apply(this, arguments);\r\n    };\r\n\r\n    ArrayEnumerable.prototype.count = function (predicate) {\r\n        return (predicate == null)\r\n            ? this.getSource().length\r\n            : Enumerable.prototype.count.apply(this, arguments);\r\n    };\r\n\r\n    ArrayEnumerable.prototype.elementAt = function (index) {\r\n        var source = this.getSource();\r\n        return (0 <= index && index < source.length)\r\n            ? source[index]\r\n            : Enumerable.prototype.elementAt.apply(this, arguments);\r\n    };\r\n\r\n    ArrayEnumerable.prototype.elementAtOrDefault = function (index, defaultValue) {\r\n        if (defaultValue === undefined) defaultValue = null;\r\n        var source = this.getSource();\r\n        return (0 <= index && index < source.length)\r\n            ? source[index]\r\n            : defaultValue;\r\n    };\r\n\r\n    ArrayEnumerable.prototype.first = function (predicate) {\r\n        var source = this.getSource();\r\n        return (predicate == null && source.length > 0)\r\n            ? source[0]\r\n            : Enumerable.prototype.first.apply(this, arguments);\r\n    };\r\n\r\n    ArrayEnumerable.prototype.firstOrDefault = function (predicate, defaultValue) {\r\n        if (predicate !== undefined) {\r\n            return Enumerable.prototype.firstOrDefault.apply(this, arguments);\r\n        }\r\n        defaultValue = predicate;\r\n\r\n        var source = this.getSource();\r\n        return source.length > 0 ? source[0] : defaultValue;\r\n    };\r\n\r\n    ArrayEnumerable.prototype.last = function (predicate) {\r\n        var source = this.getSource();\r\n        return (predicate == null && source.length > 0)\r\n            ? source[source.length - 1]\r\n            : Enumerable.prototype.last.apply(this, arguments);\r\n    };\r\n\r\n    ArrayEnumerable.prototype.lastOrDefault = function (predicate, defaultValue) {\r\n        if (predicate !== undefined) {\r\n            return Enumerable.prototype.lastOrDefault.apply(this, arguments);\r\n        }\r\n        defaultValue = predicate;\r\n\r\n        var source = this.getSource();\r\n        return source.length > 0 ? source[source.length - 1] : defaultValue;\r\n    };\r\n\r\n    ArrayEnumerable.prototype.skip = function (count) {\r\n        var source = this.getSource();\r\n\r\n        return new Enumerable(function () {\r\n            var index;\r\n\r\n            return new IEnumerator(\r\n                function () { index = (count < 0) ? 0 : count; },\r\n                function () {\r\n                    return (index < source.length)\r\n                        ? this.yieldReturn(source[index++])\r\n                        : false;\r\n                },\r\n                Functions.Blank);\r\n        });\r\n    };\r\n\r\n    ArrayEnumerable.prototype.takeExceptLast = function (count) {\r\n        if (count == null) count = 1;\r\n        return this.take(this.getSource().length - count);\r\n    };\r\n\r\n    ArrayEnumerable.prototype.takeFromLast = function (count) {\r\n        return this.skip(this.getSource().length - count);\r\n    };\r\n\r\n    ArrayEnumerable.prototype.reverse = function () {\r\n        var source = this.getSource();\r\n\r\n        return new Enumerable(function () {\r\n            var index;\r\n\r\n            return new IEnumerator(\r\n                function () {\r\n                    index = source.length;\r\n                },\r\n                function () {\r\n                    return (index > 0)\r\n                        ? this.yieldReturn(source[--index])\r\n                        : false;\r\n                },\r\n                Functions.Blank);\r\n        });\r\n    };\r\n\r\n    ArrayEnumerable.prototype.sequenceEqual = function (second, compareSelector) {\r\n        if ((second instanceof ArrayEnumerable || second instanceof Array)\r\n            && compareSelector == null\r\n            && Enumerable.from(second).count() != this.count()) {\r\n            return false;\r\n        }\r\n\r\n        return Enumerable.prototype.sequenceEqual.apply(this, arguments);\r\n    };\r\n\r\n    ArrayEnumerable.prototype.toJoinedString = function (separator, selector) {\r\n        var source = this.getSource();\r\n        if (selector != null || !(source instanceof Array)) {\r\n            return Enumerable.prototype.toJoinedString.apply(this, arguments);\r\n        }\r\n\r\n        if (separator == null) separator = \"\";\r\n        return source.join(separator);\r\n    };\r\n\r\n    ArrayEnumerable.prototype.getEnumerator = function () {\r\n        var source = this.getSource();\r\n        var index = -1;\r\n\r\n        // fast and simple enumerator\r\n        return {\r\n            current: function () { return source[index]; },\r\n            moveNext: function () {\r\n                return ++index < source.length;\r\n            },\r\n            dispose: Functions.Blank\r\n        };\r\n    };\r\n\r\n    // optimization for multiple where and multiple select and whereselect\r\n\r\n    var WhereEnumerable = function (source, predicate) {\r\n        this.prevSource = source;\r\n        this.prevPredicate = predicate; // predicate.length always <= 1\r\n    };\r\n    WhereEnumerable.prototype = new Enumerable();\r\n\r\n    WhereEnumerable.prototype.where = function (predicate) {\r\n        predicate = Utils.createLambda(predicate);\r\n\r\n        if (predicate.length <= 1) {\r\n            var prevPredicate = this.prevPredicate;\r\n            var composedPredicate = function (x) { return prevPredicate(x) && predicate(x); };\r\n            return new WhereEnumerable(this.prevSource, composedPredicate);\r\n        }\r\n        else {\r\n            // if predicate use index, can't compose\r\n            return Enumerable.prototype.where.call(this, predicate);\r\n        }\r\n    };\r\n\r\n    WhereEnumerable.prototype.select = function (selector) {\r\n        selector = Utils.createLambda(selector);\r\n\r\n        return (selector.length <= 1)\r\n            ? new WhereSelectEnumerable(this.prevSource, this.prevPredicate, selector)\r\n            : Enumerable.prototype.select.call(this, selector);\r\n    };\r\n\r\n    WhereEnumerable.prototype.getEnumerator = function () {\r\n        var predicate = this.prevPredicate;\r\n        var source = this.prevSource;\r\n        var enumerator;\r\n\r\n        return new IEnumerator(\r\n            function () { enumerator = source.getEnumerator(); },\r\n            function () {\r\n                while (enumerator.moveNext()) {\r\n                    if (predicate(enumerator.current())) {\r\n                        return this.yieldReturn(enumerator.current());\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            function () { Utils.dispose(enumerator); });\r\n    };\r\n\r\n    var WhereSelectEnumerable = function (source, predicate, selector) {\r\n        this.prevSource = source;\r\n        this.prevPredicate = predicate; // predicate.length always <= 1 or null\r\n        this.prevSelector = selector; // selector.length always <= 1\r\n    };\r\n    WhereSelectEnumerable.prototype = new Enumerable();\r\n\r\n    WhereSelectEnumerable.prototype.where = function (predicate) {\r\n        predicate = Utils.createLambda(predicate);\r\n\r\n        return (predicate.length <= 1)\r\n            ? new WhereEnumerable(this, predicate)\r\n            : Enumerable.prototype.where.call(this, predicate);\r\n    };\r\n\r\n    WhereSelectEnumerable.prototype.select = function (selector) {\r\n        selector = Utils.createLambda(selector);\r\n\r\n        if (selector.length <= 1) {\r\n            var prevSelector = this.prevSelector;\r\n            var composedSelector = function (x) { return selector(prevSelector(x)); };\r\n            return new WhereSelectEnumerable(this.prevSource, this.prevPredicate, composedSelector);\r\n        }\r\n        else {\r\n            // if selector use index, can't compose\r\n            return Enumerable.prototype.select.call(this, selector);\r\n        }\r\n    };\r\n\r\n    WhereSelectEnumerable.prototype.getEnumerator = function () {\r\n        var predicate = this.prevPredicate;\r\n        var selector = this.prevSelector;\r\n        var source = this.prevSource;\r\n        var enumerator;\r\n\r\n        return new IEnumerator(\r\n            function () { enumerator = source.getEnumerator(); },\r\n            function () {\r\n                while (enumerator.moveNext()) {\r\n                    if (predicate == null || predicate(enumerator.current())) {\r\n                        return this.yieldReturn(selector(enumerator.current()));\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            function () { Utils.dispose(enumerator); });\r\n    };\r\n\r\n    // Collections\r\n\r\n    var Dictionary = (function () {\r\n        // static utility methods\r\n        var callHasOwnProperty = function (target, key) {\r\n            return Object.prototype.hasOwnProperty.call(target, key);\r\n        };\r\n\r\n        var computeHashCode = function (obj) {\r\n            if (obj === null) return \"null\";\r\n            if (obj === undefined) return \"undefined\";\r\n\r\n            return (typeof obj.toString === Types.Function)\r\n                ? obj.toString()\r\n                : Object.prototype.toString.call(obj);\r\n        };\r\n\r\n        // LinkedList for Dictionary\r\n        var HashEntry = function (key, value) {\r\n            this.key = key;\r\n            this.value = value;\r\n            this.prev = null;\r\n            this.next = null;\r\n        };\r\n\r\n        var EntryList = function () {\r\n            this.first = null;\r\n            this.last = null;\r\n        };\r\n        EntryList.prototype =\r\n        {\r\n            addLast: function (entry) {\r\n                if (this.last != null) {\r\n                    this.last.next = entry;\r\n                    entry.prev = this.last;\r\n                    this.last = entry;\r\n                } else this.first = this.last = entry;\r\n            },\r\n\r\n            replace: function (entry, newEntry) {\r\n                if (entry.prev != null) {\r\n                    entry.prev.next = newEntry;\r\n                    newEntry.prev = entry.prev;\r\n                } else this.first = newEntry;\r\n\r\n                if (entry.next != null) {\r\n                    entry.next.prev = newEntry;\r\n                    newEntry.next = entry.next;\r\n                } else this.last = newEntry;\r\n\r\n            },\r\n\r\n            remove: function (entry) {\r\n                if (entry.prev != null) entry.prev.next = entry.next;\r\n                else this.first = entry.next;\r\n\r\n                if (entry.next != null) entry.next.prev = entry.prev;\r\n                else this.last = entry.prev;\r\n            }\r\n        };\r\n\r\n        // Overload:function()\r\n        // Overload:function(compareSelector)\r\n        var Dictionary = function (compareSelector) {\r\n            this.countField = 0;\r\n            this.entryList = new EntryList();\r\n            this.buckets = {}; // as Dictionary<string,List<object>>\r\n            this.compareSelector = (compareSelector == null) ? Functions.Identity : compareSelector;\r\n        };\r\n        Dictionary.prototype =\r\n        {\r\n            add: function (key, value) {\r\n                var compareKey = this.compareSelector(key);\r\n                var hash = computeHashCode(compareKey);\r\n                var entry = new HashEntry(key, value);\r\n                if (callHasOwnProperty(this.buckets, hash)) {\r\n                    var array = this.buckets[hash];\r\n                    for (var i = 0; i < array.length; i++) {\r\n                        if (this.compareSelector(array[i].key) === compareKey) {\r\n                            this.entryList.replace(array[i], entry);\r\n                            array[i] = entry;\r\n                            return;\r\n                        }\r\n                    }\r\n                    array.push(entry);\r\n                } else {\r\n                    this.buckets[hash] = [entry];\r\n                }\r\n                this.countField++;\r\n                this.entryList.addLast(entry);\r\n            },\r\n\r\n            get: function (key) {\r\n                var compareKey = this.compareSelector(key);\r\n                var hash = computeHashCode(compareKey);\r\n                if (!callHasOwnProperty(this.buckets, hash)) return undefined;\r\n\r\n                var array = this.buckets[hash];\r\n                for (var i = 0; i < array.length; i++) {\r\n                    var entry = array[i];\r\n                    if (this.compareSelector(entry.key) === compareKey) return entry.value;\r\n                }\r\n                return undefined;\r\n            },\r\n\r\n            set: function (key, value) {\r\n                var compareKey = this.compareSelector(key);\r\n                var hash = computeHashCode(compareKey);\r\n                if (callHasOwnProperty(this.buckets, hash)) {\r\n                    var array = this.buckets[hash];\r\n                    for (var i = 0; i < array.length; i++) {\r\n                        if (this.compareSelector(array[i].key) === compareKey) {\r\n                            var newEntry = new HashEntry(key, value);\r\n                            this.entryList.replace(array[i], newEntry);\r\n                            array[i] = newEntry;\r\n                            return true;\r\n                        }\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n\r\n            contains: function (key) {\r\n                var compareKey = this.compareSelector(key);\r\n                var hash = computeHashCode(compareKey);\r\n                if (!callHasOwnProperty(this.buckets, hash)) return false;\r\n\r\n                var array = this.buckets[hash];\r\n                for (var i = 0; i < array.length; i++) {\r\n                    if (this.compareSelector(array[i].key) === compareKey) return true;\r\n                }\r\n                return false;\r\n            },\r\n\r\n            clear: function () {\r\n                this.countField = 0;\r\n                this.buckets = {};\r\n                this.entryList = new EntryList();\r\n            },\r\n\r\n            remove: function (key) {\r\n                var compareKey = this.compareSelector(key);\r\n                var hash = computeHashCode(compareKey);\r\n                if (!callHasOwnProperty(this.buckets, hash)) return;\r\n\r\n                var array = this.buckets[hash];\r\n                for (var i = 0; i < array.length; i++) {\r\n                    if (this.compareSelector(array[i].key) === compareKey) {\r\n                        this.entryList.remove(array[i]);\r\n                        array.splice(i, 1);\r\n                        if (array.length == 0) delete this.buckets[hash];\r\n                        this.countField--;\r\n                        return;\r\n                    }\r\n                }\r\n            },\r\n\r\n            count: function () {\r\n                return this.countField;\r\n            },\r\n\r\n            toEnumerable: function () {\r\n                var self = this;\r\n                return new Enumerable(function () {\r\n                    var currentEntry;\r\n\r\n                    return new IEnumerator(\r\n                        function () { currentEntry = self.entryList.first; },\r\n                        function () {\r\n                            if (currentEntry != null) {\r\n                                var result = { key: currentEntry.key, value: currentEntry.value };\r\n                                currentEntry = currentEntry.next;\r\n                                return this.yieldReturn(result);\r\n                            }\r\n                            return false;\r\n                        },\r\n                        Functions.Blank);\r\n                });\r\n            }\r\n        };\r\n\r\n        return Dictionary;\r\n    })();\r\n\r\n    // dictionary = Dictionary<TKey, TValue[]>\r\n    var Lookup = function (dictionary) {\r\n        this.count = function () {\r\n            return dictionary.count();\r\n        };\r\n        this.get = function (key) {\r\n            return Enumerable.from(dictionary.get(key));\r\n        };\r\n        this.contains = function (key) {\r\n            return dictionary.contains(key);\r\n        };\r\n        this.toEnumerable = function () {\r\n            return dictionary.toEnumerable().select(function (kvp) {\r\n                return new Grouping(kvp.key, kvp.value);\r\n            });\r\n        };\r\n    };\r\n\r\n    var Grouping = function (groupKey, elements) {\r\n        this.key = function () {\r\n            return groupKey;\r\n        };\r\n        ArrayEnumerable.call(this, elements);\r\n    };\r\n    Grouping.prototype = new ArrayEnumerable();\r\n\r\n    // module export\r\n    if (typeof define === Types.Function && define.amd) { // AMD\r\n        define(\"linqjs\", [], function () { return Enumerable; });\r\n    }\r\n    else if (typeof module !== Types.Undefined && module.exports) { // Node\r\n        module.exports = Enumerable;\r\n    }\r\n    else {\r\n        root.Enumerable = Enumerable;\r\n    }\r\n})(this);\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar memory_weakness_1 = require(\"./memory_weakness\");\r\nrequire(\"./scss/index.scss\");\r\n/**\r\n * タッチ対応デバイスかどうか\r\n * @returns タッチ操作可能なら true 、それ以外は false を返却する\r\n */\r\nvar isTouchDevice = function () { return typeof window.ontouchstart === \"object\"; };\r\nvar appInit = function () {\r\n    var memoryWeakness = new memory_weakness_1.MemoryWeakness();\r\n    memoryWeakness.init();\r\n    // スマホで操作時、ダブルタップで拡大してしまうのを防止する\r\n    document.addEventListener(\"dblclick\", function (e) { return e.preventDefault(); }, { passive: false });\r\n    // タッチ対応デバイスかどうかに応じて、表示内容を切り替える\r\n    var clickTypeValue = isTouchDevice() ? \"タップ\" : \"クリック\";\r\n    var $subtitleArea = document.getElementById(\"subtitleArea\");\r\n    $subtitleArea.textContent = \"\\u30AB\\u30FC\\u30C9\\u3092\\u3081\\u304F\\u308B\\u3068\\u304D\\u306F\\u30C0\\u30D6\\u30EB\" + clickTypeValue + \"\\uFF01\\uFF01\";\r\n};\r\nwindow.onload = appInit;\r\n// 範囲選択を無効化する\r\ndocument.addEventListener(\"selectstart\", function (e) { return e.preventDefault(); });\r\ndocument.addEventListener(\"touchstart\", function (e) { return e.preventDefault(); });\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Constant = void 0;\r\n/**\r\n * 定数クラス\r\n */\r\nvar Constant = /** @class */ (function () {\r\n    function Constant() {\r\n    }\r\n    Object.defineProperty(Constant, \"SelectableNumber\", {\r\n        /**\r\n         * 各ターンで選択可能なカードの枚数\r\n         */\r\n        get: function () {\r\n            return 2;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constant, \"MaxPair\", {\r\n        /**\r\n         * 最大ペア数\r\n         */\r\n        get: function () {\r\n            return 10;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constant, \"JokerNumber\", {\r\n        /**\r\n         * トランプの画像（ジョーカー）を示す番号\r\n         */\r\n        get: function () {\r\n            return 14;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constant, \"JokerType\", {\r\n        /**\r\n         * ジョーカーを示す絵札番号\r\n         */\r\n        get: function () {\r\n            return 4;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constant, \"StartCardNumber\", {\r\n        /**\r\n         * トランプ画像の開始番号\r\n         */\r\n        get: function () {\r\n            return 1;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constant, \"EndCardNumber\", {\r\n        /**\r\n         * トランプ画像の終了番号\r\n         */\r\n        get: function () {\r\n            return 14;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constant, \"ImageFolderPath\", {\r\n        /**\r\n         * 画像フォルダのパス\r\n         */\r\n        get: function () {\r\n            return \"./images/\";\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constant, \"ImageExtension\", {\r\n        /**\r\n         * トランプ画像の拡張子\r\n         */\r\n        get: function () {\r\n            return \".gif\";\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constant, \"DefaultCardFileName\", {\r\n        /**\r\n         * 裏向きトランプ画像のファイル名\r\n         */\r\n        get: function () {\r\n            return \"z02\";\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constant, \"LifeImageFileName\", {\r\n        /**\r\n         * ライフ画像のファイル名\r\n         */\r\n        get: function () {\r\n            return \"lifeImage.png\";\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constant, \"MaxMissNumber\", {\r\n        /**\r\n         * 最大ミス可能回数\r\n         */\r\n        get: function () {\r\n            return 7;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constant, \"LifeImageClassName\", {\r\n        /**\r\n         * ライフエリア要素のクラス名\r\n         */\r\n        get: function () {\r\n            return \"lifeImage\";\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constant, \"CardTypeList\", {\r\n        /**\r\n         * カードの絵札（スペード、ハート、ダイヤ、クラブ、ジョーカー）別 key と value の一覧\r\n         */\r\n        get: function () {\r\n            return [\r\n                { \"key\": \"Spade\", \"value\": \"s\" },\r\n                { \"key\": \"Heart\", \"value\": \"h\" },\r\n                { \"key\": \"Diamond\", \"value\": \"d\" },\r\n                { \"key\": \"Club\", \"value\": \"c\" },\r\n                { \"key\": \"Joker\", \"value\": \"x\" },\r\n            ];\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constant, \"HitClassName\", {\r\n        /**\r\n         * 正解時にセットするクラス名\r\n         */\r\n        get: function () {\r\n            return \"hit\";\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constant, \"MissClassName\", {\r\n        /**\r\n         * 不正解時にセットするクラス名\r\n         */\r\n        get: function () {\r\n            return \"miss\";\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constant, \"GrayOutClassName\", {\r\n        /**\r\n    \r\n        /**\r\n         * グレーアウトデザインを適用するためのクラス名\r\n         */\r\n        get: function () {\r\n            return \"grayOut\";\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return Constant;\r\n}());\r\nexports.Constant = Constant;\r\n","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.MemoryWeakness = void 0;\r\nvar constant_1 = require(\"./constant\");\r\nvar linq_1 = __importDefault(require(\"linq\"));\r\n/**\r\n * 神経衰弱クラス\r\n */\r\nvar MemoryWeakness = /** @class */ (function () {\r\n    // -------------------------------------\r\n    // 構築・消滅\r\n    // -------------------------------------\r\n    /**\r\n     * コンストラクタ\r\n     */\r\n    function MemoryWeakness() {\r\n        var _this = this;\r\n        // -------------------------------------\r\n        // パブリックメソッド\r\n        // -------------------------------------\r\n        /**\r\n         * ゲーム画面を初期化する\r\n         */\r\n        this.init = function () {\r\n            _this.cardList = [];\r\n            _this.selectCardCount = 0;\r\n            _this.selectCardList = [];\r\n            _this.isSelectable = true;\r\n            _this.isGameClear = false;\r\n            _this.isGameOver = false;\r\n            _this.pairCount = 0;\r\n            _this.missCount = 0;\r\n            // 初期状態で表示するトランプの裏向き画像パス\r\n            var filePath = constant_1.Constant.ImageFolderPath + constant_1.Constant.DefaultCardFileName + constant_1.Constant.ImageExtension;\r\n            _this.cardImages.forEach(function ($image) {\r\n                // カード画像設定要素群に、トランプの裏向き画像を初期状態としてセットする\r\n                $image.src = filePath;\r\n                // トランプ画像がダブルクリックされた場合のイベント定義\r\n                $image.addEventListener(\"dblclick\", _this.selectCard);\r\n            });\r\n            // 「リセット」ボタンクリック時のイベント定義\r\n            _this.resetButton.addEventListener(\"click\", _this.resetGame);\r\n            // ライフ画像要素が設定されている可能性があるので、いったん削除する\r\n            _this.removeLifeImages();\r\n            // ライフの追加\r\n            _this.addLifeImages();\r\n            _this.removeGrayOut();\r\n            var defaultCount = 0;\r\n            // ペア数\r\n            _this.pairCountArea.textContent = _this.createPairCountValue(defaultCount);\r\n            // ミス数\r\n            _this.missCountArea.textContent = _this.createMissCountValue(defaultCount);\r\n            // 残りミス可能数\r\n            _this.messageArea.textContent = _this.createStatusMessage(constant_1.Constant.MaxMissNumber);\r\n            // カードをシャッフルする\r\n            _this.shuffleCards();\r\n        };\r\n        // -------------------------------------\r\n        // プライベートメソッド\r\n        // -------------------------------------\r\n        /**\r\n         * カードが選択された場合に実行される処理\r\n         * @param e イベント\r\n         * @returns なし\r\n         */\r\n        this.selectCard = function (e) { return __awaiter(_this, void 0, void 0, function () {\r\n            var target, $image, cardNumber, isPair;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!this.isSelectable || this.isGameClear || this.isGameOver) {\r\n                            // 以下のいずれかの条件を満たしている場合、何もしない\r\n                            // 　・カードが選択不可状態\r\n                            // 　・ゲームクリア状態\r\n                            // 　・ゲームオーバー状態\r\n                            return [2 /*return*/];\r\n                        }\r\n                        target = e.target;\r\n                        if (target === null) {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        $image = target;\r\n                        cardNumber = Number($image.dataset.cardNumber);\r\n                        if (this.selectCardCount === 1 && this.selectCardList[0] === cardNumber) {\r\n                            // すでにカードが 1 枚選択されている場合、今回選択されたカードがひとつ前に選択されたカードと\r\n                            // 同じ場所だった場合は何もしない\r\n                            return [2 /*return*/];\r\n                        }\r\n                        // 選択されたトランプを表向きにする\r\n                        $image.src = this.createTrumpImagePath(cardNumber);\r\n                        // 選択されたカードの情報（場所）を配列に格納しておく\r\n                        this.selectCardList.push(cardNumber);\r\n                        this.selectCardCount++;\r\n                        if (this.selectCardCount !== constant_1.Constant.SelectableNumber) {\r\n                            // カードが 2 枚選択されていない場合は、ここで処理終了\r\n                            return [2 /*return*/];\r\n                        }\r\n                        this.isSelectable = false;\r\n                        isPair = this.isPair();\r\n                        // ペアかどうかで処理を分岐する\r\n                        if (isPair) {\r\n                            this.showResultMessage(\"当たり！\", constant_1.Constant.HitClassName);\r\n                            this.pairCount++;\r\n                            this.pairCountArea.textContent = this.createPairCountValue(this.pairCount);\r\n                        }\r\n                        else {\r\n                            this.showResultMessage(\"はずれ…\", constant_1.Constant.MissClassName);\r\n                            this.missCount++;\r\n                            this.missCountArea.textContent = this.createMissCountValue(this.missCount);\r\n                            this.removeLife();\r\n                        }\r\n                        // 結果がすぐに消えないよう、1 秒間待機する\r\n                        return [4 /*yield*/, this.sleep(1000)];\r\n                    case 1:\r\n                        // 結果がすぐに消えないよう、1 秒間待機する\r\n                        _a.sent();\r\n                        if (this.pairCount === constant_1.Constant.MaxPair) {\r\n                            // ペア数が最大ペア数に達した場合は、ゲームクリアとする\r\n                            this.isGameClear = true;\r\n                            this.messageArea.innerHTML = \"ゲームクリア！<br/>おめでとう！\";\r\n                            this.messageArea.classList.remove(constant_1.Constant.HitClassName);\r\n                            this.setCardDisabled();\r\n                            return [2 /*return*/];\r\n                        }\r\n                        if (this.missCount === constant_1.Constant.MaxMissNumber) {\r\n                            // ミス数が最大ミス可能回数に達した場合は、ゲームオーバーとする\r\n                            this.isGameOver = true;\r\n                            this.messageArea.textContent = \"ゲームオーバー\";\r\n                            this.messageArea.classList.remove(constant_1.Constant.MissClassName);\r\n                            this.flipAllCards();\r\n                            return [2 /*return*/];\r\n                        }\r\n                        // 再度トライできるように画面を整える\r\n                        this.messageArea.classList.remove(constant_1.Constant.HitClassName, constant_1.Constant.MissClassName);\r\n                        this.messageArea.textContent = this.createStatusMessage(constant_1.Constant.MaxMissNumber - this.missCount);\r\n                        this.isSelectable = true;\r\n                        // ペアだった場合は、該当のカードを選択不可に、ペアではなかった場合はカードを裏返す\r\n                        isPair ? this.setCardDisabled() : this.turnCardFaceDown();\r\n                        // 選択中のカード情報をリセットする\r\n                        this.selectCardCount = 0;\r\n                        this.selectCardList = [];\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        }); };\r\n        /**\r\n         * リセットボタンが押された場合の処理\r\n         * @returns\r\n         */\r\n        this.resetGame = function () {\r\n            if (_this.pairCount === 0 && _this.missCount === 0 && _this.selectCardCount === 0) {\r\n                // ゲームがプレイされていない場合は、何もしない\r\n                return;\r\n            }\r\n            if (_this.pairCount === constant_1.Constant.MaxPair || _this.missCount === constant_1.Constant.MaxMissNumber) {\r\n                // プレイが終了している場合は、そのままリセットする\r\n                _this.init();\r\n                return;\r\n            }\r\n            if (!window.confirm(\"まだプレイ中ですが、リセットしますか？\")) {\r\n                return;\r\n            }\r\n            _this.init();\r\n        };\r\n        /**\r\n         * トランプのカードをシャッフルする\r\n         */\r\n        this.shuffleCards = function () {\r\n            // トランプのランク一覧\r\n            var baseRanks = _this.createNumberList(constant_1.Constant.StartCardNumber, constant_1.Constant.EndCardNumber);\r\n            // ランク一覧シャッフル\r\n            var ranks = linq_1.default.from(baseRanks).shuffle().toArray();\r\n            // 定義されている数のペアを用意する\r\n            var basePairList = _this.createPairList(ranks, constant_1.Constant.MaxPair);\r\n            // 用意したペア一覧をシャッフルする\r\n            _this.cardList = linq_1.default.from(basePairList).shuffle().toArray();\r\n        };\r\n        /**\r\n         * 指定された開始番号～終了番号までの連番一覧を生成する\r\n         * @param start 開始番号\r\n         * @param end 終了番号\r\n         * @returns 開始番号～終了番号までの連番一覧\r\n         */\r\n        this.createNumberList = function (start, end) {\r\n            return linq_1.default.range(start, end).toArray();\r\n        };\r\n        /**\r\n         * 指定されたペア数分、トランプのペアを用意する\r\n         * @param ranks トランプのカード番号一覧\r\n         * @param maxPair 最大ペア数\r\n         * @returns ペア一覧\r\n         */\r\n        this.createPairList = function (ranks, maxPair) {\r\n            // トランプの絵札一覧\r\n            var cardTypeList = constant_1.Constant.CardTypeList;\r\n            var types = _this.createNumberList(0, cardTypeList.length - 1);\r\n            var pairList = new Array();\r\n            for (var i = 0; i < maxPair; i++) {\r\n                var rank = ranks[i];\r\n                // ジョーカー用の番号かどうか\r\n                var isJoker = rank === constant_1.Constant.JokerNumber;\r\n                // 絵札をシャッフルする\r\n                var cardTypeList_1 = _this.shuffleCardTypes(types, isJoker);\r\n                // ペアを作成する\r\n                for (var j = 0; j < 2; j++) {\r\n                    var type = cardTypeList_1[j];\r\n                    pairList.push({ \"type\": type, \"value\": rank });\r\n                }\r\n            }\r\n            return pairList;\r\n        };\r\n        /**\r\n         * カードの絵札一覧をシャッフルする\r\n         * @param types カードの絵札一覧\r\n         * @param isJoker ジョーカーかどうか\r\n         * @returns シャッフル後の絵札一覧\r\n         */\r\n        this.shuffleCardTypes = function (types, isJoker) {\r\n            if (isJoker) {\r\n                // ジョーカーの場合\r\n                // ジョーカー用のカードは 2 種類しかないので、 1 と 2 のみを格納した配列を用意する\r\n                var jokerTypes = _this.createNumberList(1, 2);\r\n                return linq_1.default.from(jokerTypes).shuffle().toArray();\r\n            }\r\n            return linq_1.default.from(types).shuffle().toArray();\r\n        };\r\n        /**\r\n         * 選択されたカード番号に紐づくトランプの画像パスを生成する\r\n         * @param cardNumber 対象のカード番号\r\n         * @returns 画像ファイルパス\r\n         */\r\n        this.createTrumpImagePath = function (cardNumber) {\r\n            var cardData = _this.cardList[cardNumber];\r\n            // ジョーカー用かどうか\r\n            var isJoker = cardData.value === constant_1.Constant.JokerNumber;\r\n            // カードの絵札情報\r\n            var cardType = constant_1.Constant.CardTypeList[isJoker ? constant_1.Constant.JokerType : cardData.type];\r\n            // 画像ファイル名\r\n            var fileName = cardType.value + _this.zeroPadding(isJoker ? cardData.type : cardData.value, 2) + constant_1.Constant.ImageExtension;\r\n            // 画像パス\r\n            return constant_1.Constant.ImageFolderPath + fileName;\r\n        };\r\n        /**\r\n         * ライフ画像を最大ミス可能数分、ライフ表示エリアに追加する\r\n         */\r\n        this.addLifeImages = function () {\r\n            for (var i = constant_1.Constant.MaxMissNumber; i > 0; i--) {\r\n                var $life = document.createElement(\"img\");\r\n                $life.id = \"life_\" + i;\r\n                $life.classList.add(constant_1.Constant.LifeImageClassName);\r\n                $life.src = constant_1.Constant.ImageFolderPath + constant_1.Constant.LifeImageFileName;\r\n                _this.lifeArea.appendChild($life);\r\n            }\r\n        };\r\n        /**\r\n         * ライフ表示エリアからライフ画像要素を削除する\r\n         */\r\n        this.removeLifeImages = function () {\r\n            var $lifeImages = document.querySelectorAll(\".\" + constant_1.Constant.LifeImageClassName);\r\n            $lifeImages.forEach(function ($life) { return _this.lifeArea.removeChild($life); });\r\n        };\r\n        /**\r\n         * ライフを削除する\r\n         */\r\n        this.removeLife = function () {\r\n            var $lifeImage = document.getElementById(\"life_\" + _this.missCount);\r\n            $lifeImage.remove();\r\n        };\r\n        /**\r\n         * img 要素に設定されたグレーアウト用のクラスを削除する\r\n         */\r\n        this.removeGrayOut = function () {\r\n            var $targetList = document.querySelectorAll(\".\" + constant_1.Constant.GrayOutClassName);\r\n            $targetList.forEach(function ($target) { return $target.classList.remove(constant_1.Constant.GrayOutClassName); });\r\n        };\r\n        /**\r\n         * ペアが成立しているかどうか\r\n         * @returns ペアなら true、それ以外は false\r\n         */\r\n        this.isPair = function () {\r\n            var firstCardNumber = _this.cardList[_this.selectCardList[0]].value;\r\n            var secondCardNumber = _this.cardList[_this.selectCardList[1]].value;\r\n            return firstCardNumber === secondCardNumber;\r\n        };\r\n        /**\r\n         * 結果メッセージを表示する\r\n         * @param message 表示するメッセージ\r\n         * @param classValue 追加するクラス（任意）\r\n         */\r\n        this.showResultMessage = function (message, classValue) {\r\n            if (classValue === void 0) { classValue = null; }\r\n            _this.messageArea.textContent = message;\r\n            if (classValue !== null) {\r\n                _this.messageArea.classList.add(classValue);\r\n            }\r\n        };\r\n        /**\r\n         * 選択中のカードを選択不可にする\r\n         */\r\n        this.setCardDisabled = function () {\r\n            for (var _i = 0, _a = _this.selectCardList; _i < _a.length; _i++) {\r\n                var cardNumber = _a[_i];\r\n                var $card = document.getElementById(\"card_\" + (cardNumber + 1));\r\n                $card.removeEventListener(\"dblclick\", _this.selectCard);\r\n                $card.classList.add(constant_1.Constant.GrayOutClassName);\r\n            }\r\n        };\r\n        /**\r\n         * 選択中のカードを裏向きにする\r\n         */\r\n        this.turnCardFaceDown = function () {\r\n            // 裏向きカードのパス\r\n            var filePath = constant_1.Constant.ImageFolderPath + constant_1.Constant.DefaultCardFileName + constant_1.Constant.ImageExtension;\r\n            for (var _i = 0, _a = _this.selectCardList; _i < _a.length; _i++) {\r\n                var cardNumber = _a[_i];\r\n                var $card = document.getElementById(\"card_\" + (cardNumber + 1));\r\n                $card.src = filePath;\r\n            }\r\n        };\r\n        /**\r\n         * 裏向きになっているすべてのカードを表向きにする\r\n         */\r\n        this.flipAllCards = function () {\r\n            // 裏向きになっているカード一覧\r\n            // ※厳密には以下のクエリセレクター指定だと、現在選択中のカードも含まれてしまうが、ここでは気にしない\r\n            var $targetList = document.querySelectorAll(\".cardImage:not(.\" + constant_1.Constant.GrayOutClassName + \")\");\r\n            $targetList.forEach(function ($card) { return $card.src = _this.createTrumpImagePath(Number($card.dataset.cardNumber)); });\r\n        };\r\n        /**\r\n         * ペア数を示す文字列を生成する\r\n         * @param pairCount ペア数\r\n         * @returns ペア数を示す文字列\r\n         */\r\n        this.createPairCountValue = function (pairCount) { return pairCount + \" \\u30DA\\u30A2\"; };\r\n        /**\r\n         * ミス数を示す文字列を生成する\r\n         * @param missCount ミス数\r\n         * @returns ミス数を示す文字列\r\n         */\r\n        this.createMissCountValue = function (missCount) { return missCount + \" \\u30DF\\u30B9\"; };\r\n        /**\r\n         * ミス可能な回数を示すメッセージを生成する\r\n         * @param missCount ミスできる回数\r\n         * @returns ミス可能な回数を示すメッセージ\r\n         */\r\n        this.createStatusMessage = function (missCount) { return \"\\u3042\\u3068 \" + missCount + \" \\u56DE\\u30DF\\u30B9\\u3067\\u304D\\u307E\\u3059\\u3002\"; };\r\n        /**\r\n         * 指定された数値の先頭を 0 埋めする\r\n         * @param target 対象の数値\r\n         * @param len 0 埋めする桁数\r\n         * @returns 0 埋めした後の値\r\n         */\r\n        this.zeroPadding = function (target, len) { return (\"0\".repeat(len) + target).slice(-len); };\r\n        /**\r\n         * 指定された時間、処理をストップさせる\r\n         * @param ms 停止したい時間（ミリ秒）\r\n         * @returns なし\r\n         */\r\n        this.sleep = function (ms) { return new Promise(function (resolve) { return setTimeout(resolve, ms); }); };\r\n        /**\r\n         * シャッフル後のカード情報一覧\r\n         */\r\n        this.cardList = [];\r\n        /**\r\n         * 選択されたカードの枚数\r\n         */\r\n        this.selectCardCount = 0;\r\n        /**\r\n         * 選択されたカードの情報一覧\r\n         */\r\n        this.selectCardList = [];\r\n        /**\r\n         * カードは選択可能か\r\n         */\r\n        this.isSelectable = true;\r\n        /**\r\n         * ゲームクリアかどうか\r\n         */\r\n        this.isGameClear = false;\r\n        /**\r\n         * ゲームオーバーかどうか\r\n         */\r\n        this.isGameOver = false;\r\n        /**\r\n         * ペア数\r\n         */\r\n        this.pairCount = 0;\r\n        /**\r\n         * ミス数\r\n         */\r\n        this.missCount = 0;\r\n        this.cardImages = document.querySelectorAll(\".cardImage\");\r\n        this.lifeArea = document.getElementById(\"lifeArea\");\r\n        this.pairCountArea = document.getElementById(\"pairCountArea\");\r\n        this.missCountArea = document.getElementById(\"missCountArea\");\r\n        this.messageArea = document.getElementById(\"messageArea\");\r\n        this.resetButton = document.getElementById(\"resetButton\");\r\n    }\r\n    return MemoryWeakness;\r\n}());\r\nexports.MemoryWeakness = MemoryWeakness;\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.amdO = {};","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n__webpack_require__(752);\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}